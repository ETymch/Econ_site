V5 = c(),
V6 = c(),
V7 = c(),
V7 = c(),
V8 = c(),
V9 = c(),
V10 = c(),
V11 = c(),
V12 = c(),
V13 = c(),
V14 = c(),
V15 = c(),
V16 = c())
fin_df <- rbindlist(fin)
View(fin_df)
dates <- seq(as.Date('2022-01-01'), as.Date('2023-03-01'), by = 'month')
redo <- c()
for (i in 1:96){
if(length(fin[[i]][,1]) < 15){
redo = c(redo, i)}
}
redo
remDr$navigate("https://xn--80az8a.xn--d1aqf.xn--p1ai/%D0%B0%D0%BD%D0%B0%D0%BB%D0%B8%D1%82%D0%B8%D0%BA%D0%B0/%D0%B8%D0%BF%D0%BE%D1%82%D0%B5%D1%87%D0%BD%D0%BE%D0%B5_%D0%BA%D1%80%D0%B5%D0%B4%D0%B8%D1%82%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D0%B5")
values <- c()
listofdfs_3 <- list()
for (r in xpaths_regions[redo]){
values <- c()
button_00 <- remDr$findElement(using = 'xpath', value = paste0('//*[@id="base-header"]/div[2]/div[1]/div/div[1]/button'))$clickElement()
Sys.sleep(0.5)
Region <- remDr$findElements(using = 'xpath', value = paste0(r))
Region <- unlist(lapply(Region, function(x) x$getElementText()))
button_0 <- remDr$findElement(using = 'xpath', value = paste0(r))$clickElement()
Sys.sleep(0.5)
for (k in xpaths_years){
button_1 <- remDr$findElement(using = 'xpath', value = paste0('//*[@id="base-header"]/div[2]/div[2]/div/div[2]/div[1]/button'))$clickElement()
Sys.sleep(0.5)
button_2 <- button_4 <- remDr$findElement(using = 'xpath', value = paste0(k))$clickElement()
Sys.sleep(0.5)
for (j in xpaths_months_12){
button_3 <- remDr$findElement(using = 'xpath', value = paste0('//*[@id="base-header"]/div[2]/div[2]/div/div[1]/div[1]/button'))$clickElement()
Sys.sleep(0.5)
button_4 <- remDr$findElement(using = 'xpath', value = paste0(j))$clickElement()
Sys.sleep(3)
for (i in data_xpaths){
path <- remDr$findElements(using = 'xpath', value = paste0(i))
value <- unlist(lapply(path, function(x) x$getElementText()))
value <- sub(' ', '', value, fixed = TRUE)
values <- c(values, value)
}
}
}
button_10 <- remDr$findElement(using = 'xpath', value = paste0('//*[@id="base-header"]/div[2]/div[2]/div/div[2]/div[1]/button'))$clickElement()
Sys.sleep(0.5)
button_20 <- remDr$findElement(using = 'xpath', value = paste0('//*[@id="base-header"]/div[2]/div[2]/div/div[2]/div[2]/div/ul/li[1]/label/span'))$clickElement()
Sys.sleep(0.5)
for (j in xpaths_months){
button_3 <- remDr$findElement(using = 'xpath', value = paste0('//*[@id="base-header"]/div[2]/div[2]/div/div[1]/div[1]/button'))$clickElement()
Sys.sleep(0.5)
button_4 <- remDr$findElement(using = 'xpath', value = paste0(j))$clickElement()
Sys.sleep(3)
for (i in data_xpaths){
path <- remDr$findElements(using = 'xpath', value = paste0(i))
value <- unlist(lapply(path, function(x) x$getElementText()))
value <- sub(' ', '', value, fixed = TRUE)
values <- c(values, value)
}
}
mat <- matrix(values, ncol = length(data_names), byrow = TRUE) %>% as.data.frame()
mat$Region <- rep(Region, length(mat$V1))
listofdfs_3[[which(r == xpaths_regions[redo])]] <- mat
}
fin_1 <- fin
for (i in redo){
fin_1[[i]] <- listofdfs_3[[which(i == redo)]]
}
redo <- c()
for (i in 1:96){
if(length(fin_1[[i]]$V1) < 163){
redo = c(redo, i)}
}
redo
redo <- c()
for (i in 1:96){
if(length(fin_1[[i]]$V1) < 15){
redo = c(redo, i)}
}
redo
fin <- fin_1
for (j in 1:2){
for (k in 1:6){
f1 <- c()
a <- max(fin[[j]][,k] %>% na.omit()) / 55
for (i in 1:length(fin[[j]][,k]))
if(isTRUE(fin[[j]][i,k] < a)){
f <- fin[[j]][i,k] * 1000
f1 <- c(f1, f)
}else{
f = fin[[j]][i,k]
f1 <- c(f1, f)
}
fin[[j]][,k] <- f1
}
}
for (j in 1:96){
for (k in 4){
f1 <- c()
a <- min(fin[[j]][,k] %>% na.omit()) * 100
for (i in 1:length(fin[[j]][,k]))
if(isTRUE(fin[[j]][i,k] > a)){
f <- fin[[j]][i,k] / 1000
f1 <- c(f1, f)
}else{
f = fin[[j]][i,k]
f1 <- c(f1, f)
}
fin[[j]][,k] <- f1
}
}
#
fin <- listofdfs
for (i in 1:length(listofdfs_1)){
fin[[redo[i]]] <- listofdfs_1[[i]]
}
#
fin <- listofdfs
for (i in 1:length(listofdfs_1)){
fin[[redo[i]]] <- listofdfs_1[[i]]
}
redo <- c()
for (i in 1:96){
if(length(fin[[i]][,1]) < 15){
redo = c(redo, i)}
}
for (i in 1:length(listofdfs_1)){
fin[[redo[i]]] <- listofdfs_1[[i]]
}
fin_1 <- fin
redo <- c()
for (i in 1:96){
if(length(fin[[i]][,1]) < 15){
redo = c(redo, i)}
}
fin_1 <- fin
for (i in redo){
fin_1[[i]] <- listofdfs_3[[which(i == redo)]]
}
redo <- c()
for (i in 1:96){
if(length(fin_1[[i]]$V1) < 15){
redo = c(redo, i)}
}
redo
fin <- fin_1
for (j in 1:96){
fin[[j]]$V7 <- gsub(',', '.', fin[[j]][,7])
fin[[j]]$V8 <- gsub(',', '.', fin[[j]][,8])
fin[[j]]$V9 <- gsub(',', '.', fin[[j]][,9])
fin[[j]]$V11 <- gsub(',', '.', fin[[j]][,11])
fin[[j]]$V12  <- gsub(',', '.', fin[[j]][,12])
fin[[j]]$V14  <- gsub(',', '.', fin[[j]][,14])
for (i in 1:15){
fin[[j]][,i] <- as.numeric(fin[[j]][,i])
}
}
for (j in 1:2){
for (k in 1:6){
f1 <- c()
a <- max(fin[[j]][,k] %>% na.omit()) / 55
for (i in 1:length(fin[[j]][,k]))
if(isTRUE(fin[[j]][i,k] < a)){
f <- fin[[j]][i,k] * 1000
f1 <- c(f1, f)
}else{
f = fin[[j]][i,k]
f1 <- c(f1, f)
}
fin[[j]][,k] <- f1
}
}
for (j in 1:96){
for (k in 4){
f1 <- c()
a <- min(fin[[j]][,k] %>% na.omit()) * 100
for (i in 1:length(fin[[j]][,k]))
if(isTRUE(fin[[j]][i,k] > a)){
f <- fin[[j]][i,k] / 1000
f1 <- c(f1, f)
}else{
f = fin[[j]][i,k]
f1 <- c(f1, f)
}
fin[[j]][,k] <- f1
}
}
fine <- c()
for (i in 1:96){
if(length(fin[[i]]$V1) == 15){
fine = c(fine, i)}
}
first <- c()
for (i in fine){
first <- c(first, fin[[i]]$Region %>% unique())
}
fin_df <- rbindlist(fin)
fine
setdiff(unique(df_all$Region), first)
dates <- seq(as.Date('2022-01-01'), as.Date('2023-03-01'), by = 'month')
dates <- rep(dates, length(df_all$V8) / 15)
fin_df$Date <- dates
colnames(fin_df)[1:15] <- data_names[1:15]
View(fin_df)
write.xlsx(fin_df, 'nash_dom_database_2022_2023.xlsx')
library(xlsx)
write.xlsx(fin_df, 'nash_dom_database_2022_2023.xlsx')
df_old <- read.xlsx('nash_dom_database_3.xlsx')
df_old <- read.xlsx('nash_dom_database_3.xlsx', sheetIndex = 1)
setwd("C:/Users/evgen/construction_panel")
df_old <- read.xlsx('nash_dom_database_3.xlsx', sheetIndex = 1)
View(df_old)
df_old <- df_all[-1]
df_old <- read.xlsx('nash_dom_database_3.xlsx', sheetIndex = 1)
df_new <- merge(df_old, fin_df)
View(df_new)
df_new <- read.xlsx('nash_dom_database_2022_2023.xlsx', sheetIndex = 1)
df_old <- read.xlsx('nash_dom_database_3.xlsx', sheetIndex = 1)
setwd("C:/Users/evgen/econometrics_2023/HW 2")
library(tidyverse) # библиотека для операций с данными и рисования
library(scales)
library(showtext)
library(sysfonts)
showtext.auto()
font_add_google('Merriweather')
### Данные из обследования домохозяйств, 193000 наблюдений!:
data <- read.csv('fullOBDX2021.csv', header = T, sep = ',') %>%
filter(Period.razrabotki == '1 квартал') # выбираем данные за 1 квартал
data_gorod <- data %>%
filter(Tip.naselennogo.punkta == 'городской') # городские жители
data_selo <- data %>%
filter(Tip.naselennogo.punkta != 'городской') # не городские жители
sample(length(data_gorod), 10)
sample(nrow(data_gorod), 10)
nrow(data)
data[10]
data[,10]
data_gorod[10,]
data %>%
ggplot(aes(x = Denezhnyy.dokhod, fill = Tip.naselennogo.punkta)) +
geom_density(alpha = 0.2, color = NA) +
theme_minimal(base_family = 'Merriweather') +
theme(legend.position = 'bottom') +
scale_x_continuous(limits = c(0, 300000), labels = label_number()) +
scale_y_continuous(labels = label_number()) +
scale_fill_manual(values = c('#FDCA40', '#B6416C')) +
scale_color_manual(values = c('#FDCA40', '#B6416C')) +
guides(fill = guide_legend(title = 'Тип наседённого пункта', title.position = 'top'),
color = F
) +
labs(x = 'Денежный доход', y = 'Плотность')
data %>%
ggplot(aes(x = Denezhnyy.dokhod, fill = Tip.naselennogo.punkta)) +
geom_density(alpha = 0.2, color = NA) +
geom_vline(xintercept = mean(data_gorod$Denezhnyy.dokhod), color = '#FDCA40') +
theme_minimal(base_family = 'Merriweather') +
theme(legend.position = 'bottom') +
scale_x_continuous(limits = c(0, 300000), labels = label_number()) +
scale_y_continuous(labels = label_number()) +
scale_fill_manual(values = c('#FDCA40', '#B6416C')) +
scale_color_manual(values = c('#FDCA40', '#B6416C')) +
guides(fill = guide_legend(title = 'Тип наседённого пункта', title.position = 'top'),
color = F
) +
labs(x = 'Денежный доход', y = 'Плотность')
data %>%
ggplot(aes(x = Denezhnyy.dokhod, fill = Tip.naselennogo.punkta)) +
geom_density(alpha = 0.2, color = NA) +
geom_vline(xintercept = mean(data_gorod$Denezhnyy.dokhod), color = '#FDCA40') +
geom_vline(xintercept = mean(data_gorod$Denezhnyy.dokhod), color = '#B6416C') +
theme_minimal(base_family = 'Merriweather') +
theme(legend.position = 'bottom') +
scale_x_continuous(limits = c(0, 300000), labels = label_number()) +
scale_y_continuous(labels = label_number()) +
scale_fill_manual(values = c('#FDCA40', '#B6416C')) +
scale_color_manual(values = c('#FDCA40', '#B6416C')) +
guides(fill = guide_legend(title = 'Тип наседённого пункта', title.position = 'top'),
color = F
) +
labs(x = 'Денежный доход', y = 'Плотность')
data %>%
ggplot(aes(x = Denezhnyy.dokhod, fill = Tip.naselennogo.punkta)) +
geom_density(alpha = 0.2, color = NA) +
geom_vline(xintercept = mean(data_gorod$Denezhnyy.dokhod), color = '#FDCA40') +
geom_vline(xintercept = mean(data_selo$Denezhnyy.dokhod), color = '#B6416C') +
theme_minimal(base_family = 'Merriweather') +
theme(legend.position = 'bottom') +
scale_x_continuous(limits = c(0, 300000), labels = label_number()) +
scale_y_continuous(labels = label_number()) +
scale_fill_manual(values = c('#FDCA40', '#B6416C')) +
scale_color_manual(values = c('#FDCA40', '#B6416C')) +
guides(fill = guide_legend(title = 'Тип наседённого пункта', title.position = 'top'),
color = F
) +
labs(x = 'Денежный доход', y = 'Плотность')
y_g <- data_gorod$Denezhnyy.dokhod # доход в городе
y_s <- data_selo$Denezhnyy.dokhod # доход в селе
mean_g <- mean(y_g) # средние
mean_s <- mean(y_s)
mean_s <= mean_g
y <- c(y_g, y_s)
rpt <- function(k, data, s_length){
d <- c()
for (i in 1:k){
s <- sample(length(data), s_length)
a <- data[s]
b <- data[-s]
d[i] <- mean(a) - mean(b)
}
d
}
data.frame(results = rpt(1000, y, length(y_g))) %>%
ggplot(aes(x = results)) +
geom_density(color = 'orange', alpha = 0.5, fill = 'orange') +
geom_vline(xintercept = mean_g - mean_s, color = 'blue', linetype = 'dashed') +
theme_minimal() +
labs(x = "Бутстраповские рахницы", y = 'Плотность')
(rpt(1000, y, length(y_g)) >= mean_g - mean_s) %>%
sum()
rpt(1000, y, length(y_g)) %>%
max
mean_g - mean_s
data <-
data %>%
mutate(sberezheniya = Denezhnyy.dokhod - Raskhod.na.konechnoye.potrebleniye,
Tip.naselennogo.punkta = as.factor(Tip.naselennogo.punkta),
alc_sh = Raskhody.na.pokupku.alkogol.U.02B9.nykh.napitkov / Denezhnyy.dokhod)
mod_0 <- lm(Denezhnyy.dokhod ~ Tip.naselennogo.punkta, data = data)
mod_0 %>% summary()
library(scales)
?scales
data.frame(results = rpt(1000, y, length(y_g))) %>%
ggplot(aes(x = results)) +
geom_density(color = 'orange', alpha = 0.5, fill = 'orange') +
geom_vline(xintercept = mean_g - mean_s, color = 'blue', linetype = 'dashed') +
theme_minimal() +
scale_y_continuous(labels = scales::label_number()) +
labs(x = "Бутстраповские разницы", y = 'Плотность')
setwd("C:/Users/evgen/econometrics_2023/Class_3")
df <- read.csv('Consumption_Experiment.csv')
View(df)
View(df)
data.frame(results = rpt(1000, y, length(y_g))) %>%
ggplot(aes(x = results)) +
geom_density(color = 'orange', alpha = 0.5, fill = 'orange') +
geom_vline(xintercept = mean_g - mean_s, color = 'blue', linetype = 'dashed') +
theme_minimal() +
scale_y_continuous(labels = scales::label_number()) +
labs(x = "Бутстраповские разницы", y = 'Плотность')
data %>%
mutate(alc_sh = Raskhody.na.pokupku.alkogol.U.02B9.nykh.napitkov / Denezhnyy.dokhod)
rpt_as <- rpt(5000, data$alc_sh, 30000)
as_gorod <- data %>%
filter(Tip.naselennogo.punkta == 'городской') %>%
select(alc_sh) %>%
mean()
as_gorod <- data %>%
filter(Tip.naselennogo.punkta == 'городской') %>%
dplyr::select(alc_sh)
as_gorod <- data %>%
filter(Tip.naselennogo.punkta == 'городской') %>%
dplyr::select(alc_sh) %>%
mean()
as_gorod <- data %>%
filter(Tip.naselennogo.punkta == 'городской') %>%
dplyr::select(alc_sh) %>%
as.numeric() %>%
mean()
as_gorod <- data %>%
filter(Tip.naselennogo.punkta == 'городской')
as_gorod <- as_gorod$alc_sh %>%
mean()
as_selo <- data %>%
filter(Tip.naselennogo.punkta == 'сельский')
as_selo <- as_selo$alc_sh %>%
mean()
as_gorod - as_selo
library(hrbrthemes)
data %>%
ggplot(aes(x = alc_sh, color = Tip.naselennogo.punkta, fill = Tip.naselennogo.punkta)) +
geom_density(alpha = 0.5) +
theme_ipsum()
data %>%
ggplot(aes(x = alc_sh, color = Tip.naselennogo.punkta, fill = Tip.naselennogo.punkta)) +
geom_density(alpha = 0.5) +
theme_ipsum() +
xlim(0, 0.1)
data %>%
ggplot(aes(x = alc_sh, color = Tip.naselennogo.punkta, fill = Tip.naselennogo.punkta)) +
geom_density(alpha = 0.5) +
theme_ipsum() +
xlim(0, 0.6)
data %>%
ggplot(aes(x = alc_sh, color = Tip.naselennogo.punkta, fill = Tip.naselennogo.punkta)) +
geom_density(alpha = 0.5) +
theme_ipsum() +
xlim(0, 0.06)
which(data$alc_sh > 0.5)
data[c(which(data$alc_sh > 0.5)), ]
data_1 <- data %>%
filter(alc_sh <= 1) %>%
ggplot(aes(x = alc_sh, color = Tip.naselennogo.punkta, fill = Tip.naselennogo.punkta)) +
geom_density(alpha = 0.5) +
theme_ipsum() +
xlim(0, 0.06)
data %>%
filter(alc_sh <= 1) %>%
ggplot(aes(x = alc_sh, color = Tip.naselennogo.punkta, fill = Tip.naselennogo.punkta)) +
geom_density(alpha = 0.5) +
theme_ipsum() +
xlim(0, 0.06)
data_1 <- data %>%
filter(alc_sh > 0) %>%
mutate(l_alc_sh = log(alc_sh))
data_1 %>%
ggplot(aes(x = l_alc_sh, color = Tip.naselennogo.punkta, fill = Tip.naselennogo.punkta)) +
geom_density(alpha = 0.5) +
theme_ipsum() +
xlim(0, 0.06)
View(data_1)
data_1 <- data %>%
#filter(alc_sh > 0) %>%
mutate(l_alc_sh = log(alc_sh))
data_1 %>%
ggplot(aes(x = l_alc_sh, color = Tip.naselennogo.punkta, fill = Tip.naselennogo.punkta)) +
geom_density(alpha = 0.5) +
theme_ipsum() +
xlim(0, 0.06)
data_1 %>%
ggplot(aes(x = l_alc_sh, color = Tip.naselennogo.punkta, fill = Tip.naselennogo.punkta)) +
geom_density(alpha = 0.5) +
theme_ipsum()
data_1 <- data_1 %>%
filter(l_alc_sh > -Inf)
as_gorod <- data_1 %>%
filter(Tip.naselennogo.punkta == 'городской')
as_gorod <- as_gorod$alc_sh %>%
mean()
as_selo <- data_1 %>%
filter(Tip.naselennogo.punkta == 'сельский')
as_selo <- as_selo$alc_sh %>%
mean()
as_gorod <= as_selo
as_gorod - as_selo
rpt_1 <- rpt(5000, data_1$alc_sh, 10000)
data.frame(rpt_1) %>%
ggplot(aes(x = rpt_1)) +
geom_density()
data.frame(rpt_1) %>%
ggplot(aes(x = abs(rpt_1))) +
geom_density()
data$alc_sh %>%
log() %>%
density %>%
plot()
data_1 <- data %>%
#filter(sberezheniya > 0) %>%
mutate(l_sber = log(sberezheniya),
l_alc_sh = log(alc_sh)) %>%
filter(l_sber > 0)
data <-
data %>%
mutate(sberezheniya = Denezhnyy.dokhod - Raskhod.na.konechnoye.potrebleniye,
Tip.naselennogo.punkta = as.factor(Tip.naselennogo.punkta),
alc_sh = Raskhody.na.pokupku.alkogol.U.02B9.nykh.napitkov / Denezhnyy.dokhod)
data_1 <- data %>%
#filter(sberezheniya > 0) %>%
mutate(l_sber = log(sberezheniya),
l_alc_sh = log(alc_sh)) %>%
filter(l_sber > 0)
View(data_1)
data$alc_sh %>%
#log() %>%
density %>%
plot()
which(data$alc_sh >= 1)
data[-which(data$alc_sh >= 1), ]$alc_sh
data[-which(data$alc_sh >= 1), ]$alc_sh %>%
density %>%
plot()
data <-
data %>%
mutate(alc_ind = ifelse(data$alc_sh == 0, 0, 1))
lm(sberezheniya ~ alc_ind, data)
lm(sberezheniya ~ alc_ind, data) %>%
summary()
data <-
data %>%
mutate(alc_ind = ifelse(data$alc_sh == 0, 0, 1),
sber_sh = sberezheniya / Denezhnyy.dokhod)
lm(sber_sh ~ alc_ind, data)
lm(sberezheniya ~ alc_ind, data[-which(data$alc_sh >= 1), ]) %>%
summary()
lm(sber_sh ~ alc_ind, data[-which(data$alc_sh >= 1), ])
mod_0 <- lm(sber_sh ~ alc_ind, data[-which(data$alc_sh >= 1), ])
hatvalues(mod_0)
hatvalues(mod_0) %>% plot()
hatvalues(mod_0) %>%
density %>%
plot()
mod_0 <- lm(sber_sh ~ alc_sh, data[-which(data$alc_sh >= 1), ])
hatvalues(mod_0) %>%
density %>%
plot()
mod_0 %>% summary
