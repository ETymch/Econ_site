geom_smooth(formula = y ~ x + color, method = 'lm')
dta %>%
mutate(inccoef = appinc / loanamt) %>%
mutate(pubrec = as.factor(pubrec)) %>%
ggplot(aes(x = inccoef, y = approve, color = pubrec)) +
geom_point(show.legend = F) +
geom_smooth(formula = y ~ x, method = 'lm')
dta <- dta %>%
mutate(inccoef = appinc / loanamt) %>%
mutate(pubrec = as.factor(pubrec))
mod_ols <- lm(approve ~ inccoef, dta)
stargazer(mod_ols)
stargazer(mod_ols, type = 'text')
mod_ols1 <- lm(approve ~ inccoef + pubrec)
mod_ols1 <- lm(approve ~ inccoef + pubrec, dta)
stargazer(mod_ols, type = 'text')
stargazer(mod_ols, mod_ols1 type = 'text')
stargazer(mod_ols, mod_ols1, type = 'text')
mod_logistic <- glm(approve ~ inccoef, family = binomial)
mod_logistic <- glm(approve ~ inccoef, family = binomial, dta)
stargazer(mod_ols, mod_ols1, mod_logisticc type = 'text')
stargazer(mod_ols, mod_ols1, mod_logistic, type = 'text')
mod_logistic1 <- glm(approve ~ inccoef + pubrec, family = binomial, dta)
stargazer(mod_ols, mod_ols1, mod_logistic, mod_logistic1 type = 'text')
stargazer(mod_ols, mod_ols1, mod_logistic, mod_logistic1, type = 'text')
mod_logistic2 <- glm(approve ~ inccoef + pubrec + black + male + hispan + old + married, family = binomial, dta)
stargazer(mod_ols, mod_ols1, mod_logistic, mod_logistic1, type = 'text')
stargazer(mod_ols, mod_ols1, mod_logistic, mod_logistic1, mod_logistic2, type = 'text')
mod_logistic2 <- glm(approve ~ appinc + pubrec + black + male + hispan + old + married, family = binomial, dta)
stargazer(mod_ols, mod_ols1, mod_logistic, mod_logistic1, mod_logistic2, type = 'text')
plot(mod_logistic)
1 / (1 + e^-(1.995 - 0.041))
1 / (1 + 1e^-(1.995 - 0.041))
1 / (1 + exp(-(1.995 - 0.041)))
inccoed
inccoef
dta$inccoef
x = seq(0, 3, by = 0.1)
y = 1 / (1 + exp(-(1.995 - 0.041 * x)))
tibble(x, y) %>%
ggplot(aes(x = x, y = y)) +
geom_line
tibble(x, y) %>%
ggplot(aes(x = x, y = y)) +
geom_line()
stargazer(mod_ols, mod_ols1, mod_logistic, mod_logistic1, mod_logistic2, type = 'text')
mod_logistic2 <- glm(approve ~ inccoef + appinc + pubrec + black + male + hispan + old + married, family = binomial, dta)
stargazer(mod_ols, mod_ols1, mod_logistic, mod_logistic1, mod_logistic2, type = 'text')
x = seq(0, 1, by = 1)
y = 1 / (1 + exp(-(1.995 - 1.796 * x)))
tibble(x, y) %>%
ggplot(aes(x = x, y = y)) +
geom_line()
setwd("C:/Users/evgen/econometrics_2023/HW3")
dta <- read_csv('framingham.csv')
View(dta)
dta
colnames(dta)
dta %>%
ggplot(aes(x = glucose, y = diabetes)) +
geom_point()
dta %>%
ggplot(aes(x = glucose, y = diabetes)) +
geom_point()
dta %>%
ggplot(aes(x = glucose, y = diabetes)) +
geom_point() +
geom_vline(xintercept = 99, color = 'red')
dta %>%
ggplot(aes(x = glucose, y = diabetes)) +
geom_point() +
geom_vline(xintercept = 99, color = 'red', type = 'dashed')
library(hrbrthemes)
dta %>%
ggplot(aes(x = glucose, y = diabetes)) +
geom_point() +
geom_vline(xintercept = 99, color = 'red') +
theme_ipsum()
library(hrbrthemes)
dta %>%
ggplot(aes(x = glucose, y = diabetes)) +
geom_point() +
geom_vline(xintercept = 99, color = 'red') +
theme_ipsum()
dta %>%
ggplot(aes(x = glucose, y = diabetes)) +
geom_point() +
geom_vline(xintercept = 99, color = 'red') +
hrbrthemes::theme_ipsum()
blogdown:::preview_site()
library(tidyverse)
setwd("C:/Users/evgen/econometrics_2023/HW3")
titanic <- read.csv('train_and_test2.csv')
View(titanic)
titanic %>%
ggplot(aes(x = fare, y = survived)) +
geom_point()
titanic %>%
ggplot(aes(x = Fare, y = Survived)) +
geom_point()
colnames(titanic)
titanic %>%
ggplot(aes(x = Fare, y = X2urvived)) +
geom_point()
titanic %>%
ggplot(aes(x = Sex, y = X2urvived)) +
geom_point()
titanic %>%
ggplot(aes(x = Fare, y = X2urvived)) +
geom_point()
titanic %>%
ggplot(aes(x = Age, y = X2urvived)) +
geom_point()
mod <- glm(X2urvived ~ Age + Fare + Sex + sibsp, 'binomial')
mod <- glm(X2urvived ~ Age + Fare + Sex + sibsp, 'binomial', titanic)
stargazer(mod)
library(stargazer)
stargazer(mod)
stargazer(mod, type = 'text')
library(tidyverse)
library(hrbrthemes)
library(stargazer)
library(patchwork)
library(reshape2)
dta <- read_csv('https://raw.githubusercontent.com/ETymch/Econometrics_2023/main/Datasets/framingham.csv')
View(dta)
dta %>%
ggplot(aes(x = glucose, y = diabetes)) +
geom_point()
dta %>%
ggplot(aes(x = glucose, y = diabetes)) +
geom_point() +
geom_smooth(method = 'lm')
dta %>%
ggplot(aes(x = glucose, y = diabetes)) +
geom_point() +
geom_smooth(method = "glm",
method.args = list(family = "binomial"),
se = FALSE)
dta %>%
ggplot(aes(x = glucose, y = diabetes)) +
geom_point() +
geom_smooth(method = "glm",
method.args = list(family = "binomial"),
se = FALSE) +
geom_vline(xintercept = 99, color = 'red')
dta %>%
ggplot(aes(x = glucose, y = diabetes)) +
geom_point() +
geom_smooth(method = 'lm') +
geom_vline(xintercept = 99, color = 'red')
dta %>%
ggplot(aes(x = glucose, y = diabetes)) +
geom_point() +
geom_smooth(method = "glm",
method.args = list(family = "binomial"),
se = FALSE) +
geom_vline(xintercept = 99, color = 'red')
dta %>%
ggplot(aes(x = glucose, y = diabetes)) +
geom_point() +
geom_smooth(method = 'lm') +
geom_vline(xintercept = 99, color = 'red')
mod_ols <- lm(diabetes ~ glucose ,dta)
stargazer(mod_ols)
stargazer(mod_ols, type = 'text')
test <- sample_n(dta, 800)
train <- setdiff(dta, test)
mod_ols <- lm(diabetes ~ glucose, train)
stargazer(mod_ols, type = 'text')
View(dta)
c('Allison', "Bill", 'Caleb')
friends <- c('Allison', "Bill", 'Caleb')
setdiff(friends, 'Caleb')
setdiff('Caleb', friends)
stargazer(mod_ols, type = 'text')
y <- function(x){
intercept + b*x
}
S <- function(x){
1 / ( 1 + exp(-y(x)))
}
x <- seq(-10, 10, by = 0.1)
x
tibble(x,
line = y(x),
sigmoid = S(x))
intercept = 0
b = 1
tibble(x,
line = y(x),
sigmoid = S(x))
tibble(x,
line = y(x),
sigmoid = S(x)) %>%
melt(id = 'x')
tibble(x,
line = y(x),
sigmoid = S(x)) %>%
melt(id = 'x') %>%
ggplot(aex(x = x, y = value, color = variable)) +
geom_line()
tibble(x,
line = y(x),
sigmoid = S(x)) %>%
melt(id = 'x') %>%
ggplot(aes(x = x, y = value, color = variable)) +
geom_line()
tibble(x,
line = y(x),
sigmoid = S(x)) %>%
melt(id = 'x') %>%
ggplot(aes(x = x, y = value, color = variable)) +
geom_line() +
ylim(0, 1)
intercept = 0
b = 5
tibble(x,
line = y(x),
sigmoid = S(x)) %>%
melt(id = 'x') %>%
ggplot(aes(x = x, y = value, color = variable)) +
geom_line() +
ylim(0, 1)
intercept = 0
b = 1
tibble(x,
line = y(x),
sigmoid = S(x)) %>%
melt(id = 'x') %>%
ggplot(aes(x = x, y = value, color = variable)) +
geom_line() +
ylim(0, 1)
intercept = 10
b = 1
tibble(x,
line = y(x),
sigmoid = S(x)) %>%
melt(id = 'x') %>%
ggplot(aes(x = x, y = value, color = variable)) +
geom_line() +
ylim(0, 1)
tibble(x,
line = y(x),
sigmoid = S(x)) %>%
melt(id = 'x') %>%
ggplot(aes(x = x, y = value, color = variable)) +
geom_line() +
ylim(0, 1) +
theme_ipsum()
tibble(x,
line = y(x),
sigmoid = S(x)) %>%
melt(id = 'x') %>%
ggplot(aes(x = x, y = value, color = variable)) +
geom_line() +
ylim(0, 1) +
theme_ipsum() +
labs(title = 'Сигмоид против линии', x = 'Икс', y = 'Ноль или 1')
tibble(x,
line = y(x),
sigmoid = S(x)) %>%
melt(id = 'x') %>%
ggplot(aes(x = x, y = value, color = variable)) +
geom_line(lwd = 1) +
ylim(0, 1) +
theme_ipsum() +
labs(title = 'Сигмоид против линии', x = 'Икс', y = 'Ноль или 1')
tibble(x,
line = y(x),
sigmoid = S(x)) %>%
melt(id = 'x') %>%
ggplot(aes(x = x, y = value, color = variable)) +
geom_line(lwd = 1, alpha = 0.6) +
ylim(0, 1) +
theme_ipsum() +
labs(title = 'Сигмоид против линии', x = 'Икс', y = 'Ноль или 1')
intercept = 1
b = 1
tibble(x,
line = y(x),
sigmoid = S(x)) %>%
melt(id = 'x') %>%
ggplot(aes(x = x, y = value, color = variable)) +
geom_line(lwd = 1, alpha = 0.6) +
ylim(0, 1) +
theme_ipsum() +
labs(title = 'Сигмоид против линии', x = 'Икс', y = 'Ноль или 1')
intercept = 1
b = 0.4
tibble(x,
line = y(x),
sigmoid = S(x)) %>%
melt(id = 'x') %>%
ggplot(aes(x = x, y = value, color = variable)) +
geom_line(lwd = 1, alpha = 0.6) +
ylim(0, 1) +
theme_ipsum() +
labs(title = 'Сигмоид против линии', x = 'Икс', y = 'Ноль или 1')
titanic <- read.csv('train_and_test2.csv')
View(titanic)
mod_1 <- glm(diabetes ~ glucose, family = 'binomial', train)
stargazer(mod_1)
stargazer(mod_1, type = 'text')
}
S <- function(x){
1 / (1 + exp(- (coefficients(mod_1)[1] + coefficients(mod_1)[2] * x)))
}
gl_test <- test$glucose
y <- function(x){
coefficients(mod_ols)[1] + oefficients(mod_ols)[2]*x
}
coefficients(mod_ols)
coefficients(mod_ols)[1]
coefficients(mod_ols)[2]
dia_test <- test$diabetes
tibble(gl_test,
dia_test,
pred_ols = y(gl_test),
pred_ml = S(gl_test))
y <- function(x){
coefficients(mod_ols)[1] + coefficients(mod_ols)[2]*x
}
tibble(gl_test,
dia_test,
pred_ols = y(gl_test),
pred_ml = S(gl_test))
result <- tibble(gl_test,
dia_test,
pred_ols = y(gl_test),
pred_ml = S(gl_test))
View(result)
result <- tibble(gl_test,
dia_test,
pred_ols = y(gl_test),
pred_ml = S(gl_test)) %>%
mutate(pred_ml_01 = ifelse(pred_ml < 0.5, 0, 1))
residuals(mod_ols)
residuals(mod_ols) %>% sum()
residuals(mod_1) %>% sum()
1:length(residuals(ols))
1:length(residuals(mod_ols))
seq(0, 10, 0.5)
1:0.1:length(residuals(mod_ols))
resid <- tibble(id = 1:length(residuals(ols)),
redid_ols = residuals(mod_ols),
resid_ml = residuals(mod_1)) %>%
melt(id = 'id')
resid <- tibble(id = 1:length(residuals(mod_ols)),
redid_ols = residuals(mod_ols),
resid_ml = residuals(mod_1)) %>%
melt(id = 'id')
View(resid)
resid %>%
ggplot(aes(x = value, color = variable)) +
geom_density()
resid %>%
ggplot(aes(x = value, color = variable)) +
geom_density() +
xlim(-1, 0.5)
resid %>%
ggplot(aes(x = value, color = variable, fill = variable)) +
geom_density(alpha = 0.5) +
theme_minimal()
resid %>%
ggplot(aes(x = value, color = variable, fill = variable)) +
geom_density(alpha = 0.5) +
theme_minimal()+
xlim(-1, 0.5)
View(test)
colnames(test)
mod_2 <- glm(diabetes ~ glucose + age + education + cigsPerDay + totChol, train)
mod_2 <- glm(diabetes ~ glucose + age + education + cigsPerDay + totChol, family = 'binomial', train)
stargazer(mod_1, mod_2, type = 'text')
setwd("C:/Users/evgen/Project_Forecast_Dashboard/4q2022")
library(tidyverse)
library(hrbrthemes)
library(stargazer)
library(patchwork)
library(reshape2)
library(gganimate)
# Данные
dta <- read_csv('https://raw.githubusercontent.com/ETymch/Econometrics_2023/main/Datasets/framingham.csv')
test <- sample_n(dta, 800) # тестовая выборка. На ней мы будем проверять модели.
train <- setdiff(dta, test) # на этой выборке мы будем оценивать модели
mod_ml <- glm(diabetes ~ glucose, family = 'binomial', train)
mod_ml_1 <- glm(diabetes ~ glucose + age + education + cigsPerDay + totChol, family = 'binomial', train)
S <- function(x){
1 / (1 + exp(-x))
}
predict_ml <- predict(mod_ml, test) %>% S
predict_ml_1 <- predict(mod_ml_1, test) %>% S
tibble(true_diagnoses = test$diabetes,
prob_ml = predict_ml,
prob_ml_1 = predict_ml_1) %>%
mitate(dia_ml = ifelse(prob_ml < 0.5, 0, 1),
dia_ml_1 = ifelse(prob_ml_1 < 0.5, 0, 1)
)
tibble(true_diagnoses = test$diabetes,
prob_ml = predict_ml,
prob_ml_1 = predict_ml_1) %>%
mutate(dia_ml = ifelse(prob_ml < 0.5, 0, 1),
dia_ml_1 = ifelse(prob_ml_1 < 0.5, 0, 1)
)
tibble(true_diagnoses = test$diabetes,
prob_ml = predict_ml,
prob_ml_1 = predict_ml_1) %>%
mutate(dia_ml = ifelse(prob_ml < 0.5, 0, 1),
dia_ml_1 = ifelse(prob_ml_1 < 0.5, 0, 1)
) %>%
mutate(error_ml = ifelse(dia_ml == true_diagnoses, 0, 1),
error_ml_1 = ifelse(dia_ml == true_diagnoses, 0, 1)
)
predixtions <- tibble(true_diagnoses = test$diabetes,
prob_ml = predict_ml,
prob_ml_1 = predict_ml_1) %>%
mutate(dia_ml = ifelse(prob_ml < 0.5, 0, 1),
dia_ml_1 = ifelse(prob_ml_1 < 0.5, 0, 1)
) %>%
mutate(error_ml = ifelse(dia_ml == true_diagnoses, 0, 1),
error_ml_1 = ifelse(dia_ml == true_diagnoses, 0, 1)
)
predictions %>%
select(error_ml) %>%
sum()
predictions <- tibble(true_diagnoses = test$diabetes,
prob_ml = predict_ml,
prob_ml_1 = predict_ml_1) %>%
mutate(dia_ml = ifelse(prob_ml < 0.5, 0, 1),
dia_ml_1 = ifelse(prob_ml_1 < 0.5, 0, 1)
) %>%
mutate(error_ml = ifelse(dia_ml == true_diagnoses, 0, 1),
error_ml_1 = ifelse(dia_ml == true_diagnoses, 0, 1)
)
predictions %>%
select(error_ml) %>%
sum()
predictions %>%
select(error_ml)
predictions %>%
select(error_ml_1) %>%
sum()
View(predictions)
predict_ml <- predict(mod_ml, test[-diabetes]) %>% S
predict_ml <- predict(mod_ml, test %>% select(-diabetes)) %>% S
predict_ml_1 <- predict(mod_ml_1, test %>% select(-diabetes)) %>% S
predictions <- tibble(true_diagnoses = test$diabetes,
prob_ml = predict_ml,
prob_ml_1 = predict_ml_1) %>%
mutate(dia_ml = ifelse(prob_ml < 0.5, 0, 1),
dia_ml_1 = ifelse(prob_ml_1 < 0.5, 0, 1)
) %>%
mutate(error_ml = ifelse(dia_ml == true_diagnoses, 0, 1),
error_ml_1 = ifelse(dia_ml == true_diagnoses, 0, 1)
)
test$
predictions %>%
select(error_ml_1) %>%
sum()
predictions$error_ml %>%  sum()
predictions$error_ml %>% %>% as.integer() %>% sum()
predictions$error_ml %>% as.integer() %>% sum()
predictions$error_ml %>% as.numeric() %>% sum()
predictions <- tibble(true_diagnoses = test$diabetes,
prob_ml = predict_ml,
prob_ml_1 = predict_ml_1) %>%
mutate(dia_ml = ifelse(prob_ml < 0.5, 0, 1),
dia_ml_1 = ifelse(prob_ml_1 < 0.5, 0, 1)
) %>%
mutate(error_ml = ifelse(dia_ml == true_diagnoses, 0, 1),
error_ml_1 = ifelse(dia_ml == true_diagnoses, 0, 1)
)
predictions$error_ml %>% as.numeric() %>% su
predictions$error_ml %>% as.numeric() %>% sum
predictions$error_ml %>% na.omit() %>% sum
predictions$error_ml_1 %>% na.omit() %>% sum
colnames(test)
mod_ml_1 <- glm(diabetes ~ glucose + age + education + cigsPerDay + totChol + BMI, family = 'binomial', train)
stargazer(mod_ml, mod_ml_1, type = 'text')
S <- function(x){
1 / (1 + exp(-x))
}
predict_ml <- predict(mod_ml, test %>% select(-diabetes)) %>% S
predict_ml_1 <- predict(mod_ml_1, test %>% select(-diabetes)) %>% S
predictions <- tibble(true_diagnoses = test$diabetes,
prob_ml = predict_ml,
prob_ml_1 = predict_ml_1) %>%
mutate(dia_ml = ifelse(prob_ml < 0.5, 0, 1),
dia_ml_1 = ifelse(prob_ml_1 < 0.5, 0, 1)
) %>%
mutate(error_ml = ifelse(dia_ml == true_diagnoses, 0, 1),
error_ml_1 = ifelse(dia_ml == true_diagnoses, 0, 1)
)
predictions$error_ml %>% na.omit() %>% sum
predictions$error_ml_1 %>% na.omit() %>% sum
mod_ml_1 <- glm(diabetes ~ glucose + age + education + currentSmoker + totChol + BMI, family = 'binomial', train)
S <- function(x){
1 / (1 + exp(-x))
}
predict_ml <- predict(mod_ml, test %>% select(-diabetes)) %>% S
predict_ml_1 <- predict(mod_ml_1, test %>% select(-diabetes)) %>% S
predictions <- tibble(true_diagnoses = test$diabetes,
prob_ml = predict_ml,
prob_ml_1 = predict_ml_1) %>%
mutate(dia_ml = ifelse(prob_ml < 0.5, 0, 1),
dia_ml_1 = ifelse(prob_ml_1 < 0.5, 0, 1)
) %>%
mutate(error_ml = ifelse(dia_ml == true_diagnoses, 0, 1),
error_ml_1 = ifelse(dia_ml == true_diagnoses, 0, 1)
)
predictions$error_ml %>% na.omit() %>% sum
predictions$error_ml_1 %>% na.omit() %>% sum
