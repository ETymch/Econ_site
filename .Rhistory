data_ie$expected[indices] <- data_ie$expected_m[indices]
data_ie %>%
select(date, expected) %>%
writexl::write_xlsx('ie_bor_m_2024.xlsx')
ie_y <- data_ie %>%
dplyr::select(ie_new) %>%
t()
ie_c <-
data_ie$expected %>%
diff()
ie_c <- c(0, ie_c) %>%
t()
# Модель с нашими ожиданиями как экзогенной переменной и меняющимся трендом.
Z = matrix(c(1,0), 1, 2)
B = matrix(c(1, 0, 1, 1), 2, 2)
A = matrix(0)
C <- matrix(list(0),2,1)
C[1,1] <- 'c'
c <- ie_c
U = matrix(0, 2, 1)
R = matrix('r')
Q = matrix(c('q1', 0, 0, 'q2'), 2, 2) # вместо q и p подставим малые значения
x0 = matrix(c(5.0, 0.1), 2, 1) # новые начальные условия
model_ie_m <- MARSS(ie_y, model = list(Z = Z, B = B, A = A, c = c, C = C, U = U, R = R, Q = Q, x0 = x0),
control = list(maxit = 300)
)
tibble(date = data_ie$date,
ie_mod = model_ie_m$states[1,],
) %>%
write.csv('ie_monthly_04_03_24.csv')
df_fin <- tibble(date = data_ie$date,
ie_mod = model_ie_m$states[1,],
)
ie_u <- all %>%
mutate(date = floor_date(date, 'month')) %>%
group_by(date) %>%
summarize(ie_mod = mean(ie_new_u))
to_append <- setdiff(ie_u$date, df_fin$date) %>% length()
df_fin <-
df_fin %>%
rbind(ie_u[(length(ie_u$date)-to_append+1):length(ie_u$date),])
df_fin %>%
write.csv('ie_monthly_04_03_24.csv')
library(tidyverse)
library(ggridges)
library(showtext)
library(sysfonts)
library(rcartocolor)
library(hrbrthemes)
showtext_auto()
font_add(family = 'HSE Sans',
regular = "HSESans-Regular.otf",
bold = 'HSESans-Bold.otf',
italic = 'HSESans-Italic.otf',
bolditalic = 'HSESans-SemiBlod.otf'
)
font_add(family = 'Computer Modern',
regular = 'cmunrm.otf')
df1 <- read.csv('ie_daily_04_03_2024.csv')
df1$month <- format(as.Date(df1$date, "%Y-%m-%d"), "%Y-%m")
df1$ie <- df1$ie_new
df1 <- df1[-1]
df1 %>%
filter(month >= '2021-06') %>%
ggplot(aes(x = ie,
y = as.factor(month),
fill = after_stat(x),
)) +
geom_density_ridges_gradient(scale = 2, rel_min_height = 0.01, color = 'white') +
scale_fill_carto_c(palette = 'SunsetDark') +
#scale_fill_viridis_c(name = "%", option = "C") +
theme_ipsum() +
theme(legend.position = 'bottom',
#legend.title = element_text(size=25),
legend.text = element_text(size = 35),
text = element_text(size = 5, color = 'black', family = 'HSE Sans'),
panel.grid.minor.x = element_blank(),
axis.text.x = element_text(size = 35),
axis.text.y = element_text(size = 35),
axis.title.x = element_text(size = 35, family = 'HSE Sans'),
axis.title.y = element_text(size = 35, family = 'HSE Sans'),
plot.title = element_text(family = "HSE Sans",
color = "black",
size = 50,
face = "bold",
hjust = 0.5,
margin = margin(t = 24, b = 6)),
plot.subtitle = element_text(family = "HSE Sans",
color = "black",
size = 41,
face = "plain",
hjust = 0.5,
margin = margin(t = 0, b = 0)),
plot.caption = element_text(family = "HSE Sans",
color = "black",
size = 20,
hjust = 0.5,
margin = margin(t = 0, b = 24))) +
#scale_color_viridis(discrete=TRUE) +
labs(x = 'Функция плотности инфляционных ожиданий', y = 'Месяц')
#title = 'Инфляционные Ожидания в России',
#subtitle = '2021-2022'
ggsave('ie_newest_paper_HSE_Sans_07_12_23.png', dpi = 400, bg = 'white', height = 7, width = 6)
setwd("D:/Работа/Stuff")
read.csv('data_seasonality.csv', sep = ';', dec = ',', header = T)
read.csv('data_seasonality.csv', sep = ';', dec = ',', header = T)
setwd("D:/Работа/Stuff")
read.csv('data_seasonality.csv', sep = ';', dec = ',', header = T)
read.csv('data_seasonality.csv', sep = ';', dec = ',', header = T)
1+1
read.csv('data_seasonality.csv', sep = ';', dec = ',', header = T)
httr::GET('https://github.com/ETymch/Econometrics_2023/raw/main/Datasets/data_seasonality.xlsx')
data_seas <- read_excel('data_seasonality.xlsx') %>%
mutate(Date = as.Date(Date)) %>%
filter(Date >= '2013-01-01')
data_seas %>%
pivot_longer(Prom_M:Trade_M) %>%
ggplot(aes(x = Date, y = value, color = name)) +
geom_line() +
facet_wrap(~name, scales = 'free') +
theme_minimal() +
labs(caption = '100 = 2016 г.')
prom <- data_seas %>%
pull(Prom_M) %>%
ts(c(2013,1), frequency = 12) %>%
log()
trade <- data_seas %>%
pull(Trade_M) %>%
ts(c(2013,1), frequency = 12) %>%
log()
# Праздники upd.
hols <- read.csv('https://raw.githubusercontent.com/ETymch/Econometrics_2023/main/Datasets/russia-holiday-dates.csv', stringsAsFactors = FALSE) %>%
pull(x) %>%
as.Date()
dates <- seq(as.Date('2013-01-01'), as.Date('2024-12-31'), by = 1)
hol_new <- tibble(dates,
hols_ind = ifelse(dates %in% hols, 1, 0)
) %>%
mutate(dates_f = floor_date(dates, 'month')) %>%
group_by(dates_f) %>%
summarize(holidays_share = mean(hols_ind)
) %>%
ungroup() %>%
mutate(yr = floor_date(dates_f, 'year')) %>%
group_by(yr) %>%
mutate(h_sh_yr = sum(holidays_share)) %>%
ungroup() %>%
mutate(count_0 = ifelse(holidays_share == 0, 1, 0)) %>%
group_by(yr) %>%
mutate(nmonth_0 = sum(count_0)) %>%
ungroup() %>%
mutate(holidays_share = ifelse(count_0 == 1, -1 * (h_sh_yr / nmonth_0), holidays_share)) %>%
pull(holidays_share) %>%
ts(start = c(2013,1), frequency = 12)
hol_new
hol_new <- tibble(dates,
hols_ind = ifelse(dates %in% hols, 1, 0)
) %>%
mutate(dates_f = floor_date(dates, 'month')) %>%
group_by(dates_f) %>%
summarize(holidays_share = mean(hols_ind)
) %>%
ungroup() %>%
mutate(x_centered_mean = holidays_share - mean(holidays_share))
hol_new
hol_new <- tibble(dates,
hols_ind = ifelse(dates %in% hols, 1, 0)
) %>%
mutate(dates_f = floor_date(dates, 'month')) %>%
group_by(dates_f) %>%
summarize(holidays_share = mean(hols_ind)
) %>%
ungroup() %>%
mutate(yr = floor_date(dates_f, 'year')) %>%
group_by(yr) %>%
mutate(h_mean_yr = mean(holidays_share)) %>%
ungroup() %>%
mutate(x_centered_mean = holidays_share - h_mean_yr) %>%
pull(x_centered_mean) %>%
ts(start = c(2013,1), frequency = 12)
hol_new
hol_new_0 <- tibble(dates,
hols_ind = ifelse(dates %in% hols, 1, 0)
) %>%
mutate(dates_f = floor_date(dates, 'month')) %>%
group_by(dates_f) %>%
summarize(holidays_share = mean(hols_ind)
) %>%
ungroup() %>%
mutate(yr = floor_date(dates_f, 'year')) %>%
group_by(yr) %>%
mutate(h_sh_yr = sum(holidays_share)) %>%
ungroup() %>%
mutate(count_0 = ifelse(holidays_share == 0, 1, 0)) %>%
group_by(yr) %>%
mutate(nmonth_0 = sum(count_0)) %>%
ungroup() %>%
mutate(holidays_share = ifelse(count_0 == 1, -1 * (h_sh_yr / nmonth_0), holidays_share)) %>%
pull(holidays_share) %>%
ts(start = c(2013,1), frequency = 12)
hol_new_1 <- tibble(dates,
hols_ind = ifelse(dates %in% hols, 1, 0)
) %>%
mutate(dates_f = floor_date(dates, 'month')) %>%
group_by(dates_f) %>%
summarize(holidays_share = mean(hols_ind)
) %>%
ungroup() %>%
mutate(yr = floor_date(dates_f, 'year')) %>%
group_by(yr) %>%
mutate(h_mean_yr = mean(holidays_share)) %>%
ungroup() %>%
mutate(x_centered_mean = holidays_share - h_mean_yr) %>%
pull(x_centered_mean) %>%
ts(start = c(2013,1), frequency = 12)
merge(hol_new_0, hol_new_1, by = 'date')
hol_new_0
hol_new_1
merge(hol_new_0, hol_new_1, by = 'dates')
merge(hol_new_0, hol_new_1, by = c('dates'))
merge(hol_new_0, hol_new_1)
plot(hol_new_0)
setwd("D:/Работа/Project_Forecast_Dashboard/2q2023")
data_mac <- read.csv('data_macro_4q23_1.csv')
out_gap <-
data_mac %>%
pull(Output) %>%
log() %>%
mFilter::hpfilter(freq = 300)
library(tidyverse)
consumption <-
data_mac %>%
pull(Consumption) %>%
log() %>%
mFilter::hpfilter(freq = 300)
consumption <- consumption$cycle %>% diff()
plot(output_gap)
plot(out_gap)
lines(consumption)
tibble(index = seq(1, length(out_gap)),
out_gap,
consumption) %>%
pivot_linger(out_gap:consumption) %>%
ggplot(aes(x = index, y = value, color = name)) +
geom_line()
tibble(index = seq(1, length(out_gap)),
out_gap,
consumption) %>%
pivot_longer(out_gap:consumption) %>%
ggplot(aes(x = index, y = value, color = name)) +
geom_line()
data_mac %>%
pull(Consumption) %>%
log() %>%
diff() %>%
plot()
lines(consumption)
library(tidyverse)
data_mac <- read.csv('data_macro_4q23_1.csv')
out_gap <-
data_mac %>%
pull(Output) %>%
log() %>%
mFilter::hpfilter(freq = 300)
out_gap <- out_gap$cycle %>% diff()
consumption <-
data_mac %>%
pull(Consumption) %>%
log() %>%
mFilter::hpfilter(freq = 300)
consumption <- consumption$cycle %>% diff()
#tibble(index = seq(1, length(out_gap)),
#       out_gap,
#       consumption) %>%
#  pivot_longer(out_gap:consumption) %>%
#  ggplot(aes(x = index, y = value, color = name)) +
#  geom_line()
df_mac <-
data_frame(date = seq(from = as.Date("2014-10-01"), length.out = 37, by = 'quarter'),
Output_Gap = out_gap,
Consumption_Gap = consumption,
CPI = data_mac$CPI %>% log() %>% diff,
IE = data_mac$Inf_Exp %>% log() %>% diff
)
write.csv(df_mac, 'mswm_data_ru.csv')
seq(from = as.Date("2014-07-01"), length.out = 38, by = 'quarter')
blogdown:::preview_site()
setwd("D:/Работа/Inflation Expectations")
library(tidyverse)
library(ggridges)
library(showtext)
library(sysfonts)
library(rcartocolor)
library(hrbrthemes)
showtext_auto()
font_add(family = 'HSE Sans',
regular = "HSESans-Regular.otf",
bold = 'HSESans-Bold.otf',
italic = 'HSESans-Italic.otf',
bolditalic = 'HSESans-SemiBlod.otf'
)
font_add(family = 'Computer Modern',
regular = 'cmunrm.otf')
df1 <- read.csv('ie_daily_24_04_2024.csv')
df1$month <- format(as.Date(df1$date, "%Y-%m-%d"), "%Y-%m")
df1$ie <- df1$ie_new
df1 <- df1[-1]
df1 %>%
filter(month >= '2021-06') %>%
ggplot(aes(x = ie,
y = as.factor(month),
fill = after_stat(x),
)) +
geom_density_ridges_gradient(scale = 2, rel_min_height = 0.01, color = 'white') +
scale_fill_carto_c(palette = 'SunsetDark') +
#scale_fill_viridis_c(name = "%", option = "C") +
theme_ipsum() +
theme(legend.position = 'bottom',
#legend.title = element_text(size=25),
legend.text = element_text(size = 35),
text = element_text(size = 5, color = 'black', family = 'HSE Sans'),
panel.grid.minor.x = element_blank(),
axis.text.x = element_text(size = 35),
axis.text.y = element_text(size = 35),
axis.title.x = element_text(size = 35, family = 'HSE Sans'),
axis.title.y = element_text(size = 35, family = 'HSE Sans'),
plot.title = element_text(family = "HSE Sans",
color = "black",
size = 50,
face = "bold",
hjust = 0.5,
margin = margin(t = 24, b = 6)),
plot.subtitle = element_text(family = "HSE Sans",
color = "black",
size = 41,
face = "plain",
hjust = 0.5,
margin = margin(t = 0, b = 0)),
plot.caption = element_text(family = "HSE Sans",
color = "black",
size = 20,
hjust = 0.5,
margin = margin(t = 0, b = 24))) +
#scale_color_viridis(discrete=TRUE) +
labs(x = 'Функция плотности инфляционных ожиданий', y = 'Месяц')
df1 %>%
filter(month >= '2021-06') %>%
ggplot(aes(x = ie,
y = as.factor(month),
fill = after_stat(x),
)) +
geom_density_ridges_gradient(scale = 2, rel_min_height = 0.01, color = 'white') +
scale_fill_carto_c(palette = 'SunsetDark') +
#scale_fill_viridis_c(name = "%", option = "C") +
theme_ipsum() +
theme(legend.position = 'bottom',
#legend.title = element_text(size=25),
legend.text = element_text(size = 35),
text = element_text(size = 5, color = 'black', family = 'Computer Modern'),
panel.grid.minor.x = element_blank(),
axis.text.x = element_text(size = 35),
axis.text.y = element_text(size = 35),
axis.title.x = element_text(size = 35, family = 'Computer Modern'),
axis.title.y = element_text(size = 35, family = 'Computer Modern'),
plot.title = element_text(family = 'Computer Modern',
color = "black",
size = 50,
face = "bold",
hjust = 0.5,
margin = margin(t = 24, b = 6)),
plot.subtitle = element_text(family = 'Computer Modern',
color = "black",
size = 41,
face = "plain",
hjust = 0.5,
margin = margin(t = 0, b = 0)),
plot.caption = element_text(family = 'Computer Modern',
color = "black",
size = 20,
hjust = 0.5,
margin = margin(t = 0, b = 24))) +
guides(fill = guide_colorbar("", title.position = "top",
# hjust = 0.5 centres the title horizontally
title.hjust = 0.5,
label.position = "bottom",
theme = theme(
legend.key.width  = unit(10, "lines"),
legend.key.height  = unit(.5, "lines"),
legend.title = element_text(family = 'HSE Sans', color = 'grey35'),
legend.text = element_text(family = 'HSE Sans', color = 'grey35')
)
)
) +
#scico::s
labs(x = 'Функция плотности инфляционных ожиданий', y = 'Месяц')
readxl::read_excel('ie_monthly_24_04_24.csv')
read.csv('ie_monthly_24_04_24.csv')
ie_fm_m <- read.csv('ie_monthly_24_04_24.csv')
ie_bor_m <- readxl:read_excel('ie_bor_m_2024.xlsx')
ie_bor_m <- readxl::read_excel('ie_bor_m_2024.xlsx')
merge(ie_fm_n, ie_bor_m, by = 'date')
merge(ie_fm_m, ie_bor_m, by = 'date')
ie_m <- merge(ie_fm_m, ie_bor_m, by = 'date')
colnames(ie_m) <- c('Дата', 'ID', 'Инфляционные ожидания фондового рынка', 'Ожидания из опросов инФОМ')
ie_m %>%
pivot_longer(`Ожидания фондового рынка`:`Ожидания из опросов инФОМ`) %>%
ggplot(aes(x = date, color = name, y = value)) +
geom_point() +
geom_line()
ie_fm_m <- read.csv('ie_monthly_24_04_24.csv')
ie_bor_m <- readxl::read_excel('ie_bor_m_2024.xlsx')
ie_m <- merge(ie_fm_m, ie_bor_m, by = 'date')
colnames(ie_m) <- c('Дата', 'ID', 'Ожидания фондового рынка', 'Ожидания из опросов инФОМ')
ie_m %>%
pivot_longer(`Ожидания фондового рынка`:`Ожидания из опросов инФОМ`) %>%
ggplot(aes(x = date, color = name, y = value)) +
geom_point() +
geom_line()
ie_m %>%
pivot_longer(`Ожидания фондового рынка`:`Ожидания из опросов инФОМ`) %>%
ggplot(aes(x = Дата, color = name, y = value)) +
geom_point() +
geom_line()
ie_m %>%
mutate(Дата = as.Date('Дата')) %>%
pivot_longer(`Ожидания фондового рынка`:`Ожидания из опросов инФОМ`) %>%
ggplot(aes(x = Дата, color = name, y = value)) +
geom_point() +
geom_line()
ie_m %>%
mutate(Дата = as.Date(`Дата`)) %>%
pivot_longer(`Ожидания фондового рынка`:`Ожидания из опросов инФОМ`) %>%
ggplot(aes(x = Дата, color = name, y = value)) +
geom_point() +
geom_line()
ie_m %>%
mutate(Дата = as.Date(`Дата`)) %>%
pivot_longer(`Ожидания фондового рынка`:`Ожидания из опросов инФОМ`) %>%
ggplot(aes(x = Дата, color = name, y = value)) +
geom_point() +
geom_line() +
scale_color_manual(values = c('#DB4B36', '#554C3E')) +
theme_minimal(base_family = 'Computer Modern') +
theme(panel.grid.major.x = element_blank(), # убираем ненужную разметку
panel.grid.minor.x = element_blank(),
panel.grid.minor.y = element_blank(),
legend.position = 'bottom',
#axis.title.x = element_blank(),
#axis.title.y = element_blank(),
strip.text = element_text(size = 15),
legend.title = element_blank(),
) +
labs(y = 'Ожидания, %',
x = 'Год')
ggsave('All_expectations.svg')
ie_fm_m
ie_fm_m <- readxl::read_excel('ie_monthly_24_04_2024.xlsx')
ie_bor_m <- readxl::read_excel('ie_bor_m_2024.xlsx')
ie_m <- merge(ie_fm_m, ie_bor_m, by = 'date')
ie_m
ie_bor_m
ie_bor_m %>% tail
ie_fm_m <- readxl::read_excel('ie_monthly_24_04_2024.xlsx')
ie_bor_m <- readxl::read_excel('ie_bor_m_2024.xlsx')
ie_bor_m %>% tail
ie_m <- merge(ie_fm_m, ie_bor_m, by = 'date')
ie_m
colnames(ie_m) <- c('Дата', 'ID', 'Ожидания фондового рынка', 'Ожидания из опросов инФОМ')
ie_m %>%
mutate(Дата = as.Date(`Дата`)) %>%
pivot_longer(`Ожидания фондового рынка`:`Ожидания из опросов инФОМ`) %>%
ggplot(aes(x = Дата, color = name, y = value)) +
geom_point() +
geom_line() +
scale_color_manual(values = c('#DB4B36', '#554C3E')) +
theme_minimal(base_family = 'Computer Modern') +
theme(panel.grid.major.x = element_blank(), # убираем ненужную разметку
panel.grid.minor.x = element_blank(),
panel.grid.minor.y = element_blank(),
legend.position = 'bottom',
#axis.title.x = element_blank(),
#axis.title.y = element_blank(),
strip.text = element_text(size = 15),
legend.title = element_blank(),
) +
labs(y = 'Ожидания, %',
x = 'Год')
ie_m %>%
mutate(Дата = as.Date(`Дата`)) %>%
pivot_longer(`Ожидания фондового рынка`:`Ожидания из опросов инФОМ`) %>%
ggplot(aes(x = Дата, color = name, y = value)) +
geom_point() +
geom_line() +
scale_color_manual(values = c('#DB4B36', '#554C3E')) +
theme_minimal(base_family = 'Computer Modern') +
theme(panel.grid.major.x = element_blank(), # убираем ненужную разметку
panel.grid.minor.x = element_blank(),
panel.grid.minor.y = element_blank(),
legend.position = 'bottom',
#axis.title.x = element_blank(),
#axis.title.y = element_blank(),
strip.text = element_text(size = 15),
legend.title = element_blank(),
) +
labs(y = 'Ожидания, %',
x = 'Год')
ggsave('All_expectations.svg')
install.packages("bookdown")
install.packages("blogdown")
blogdown:::preview_site()
blogdown:::preview_site()
install.packages("knitr")
