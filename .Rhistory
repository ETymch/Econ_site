theme(plot.title = element_text(size = 30, hjust = 0.5),
plot.subtitle = element_text(size = 25),
axis.text = element_text(size = 18),
axis.title = element_text(size = 18),
axis.ticks = element_blank(),
panel.background = element_blank()) +
#shadow_mark(alpha = alpha/4, color = alpha("grey", .25)) +
guides(fill = 'none') +
ease_aes('linear') +
transition_time(variable)
anim_save(filename = 'dists_get_closer.gif')
df %>%
ggplot(aes(x = value)) +
geom_density(fill = '#e5b9ad', color = '#e5b9ad', alpha = .5) +
geom_density(data = tibble(y), aes(x = y), fill = 'lightgreen', color = 'skyblue', alpha = 0.4) +
labs(x = 'Значения', y = '',
title = 'Линейная модель и функции плотности') +
theme_minimal(base_family = 'Yeseva One') +
theme(plot.title = element_text(size = 20, hjust = 0.5),
plot.subtitle = element_text(size = 25),
axis.text = element_text(size = 18),
axis.title = element_text(size = 18),
axis.ticks = element_blank(),
panel.background = element_blank()) +
#shadow_mark(alpha = alpha/4, color = alpha("grey", .25)) +
guides(fill = 'none') +
ease_aes('linear') +
transition_time(variable)
anim_save(filename = 'dists_get_closer.gif')
df %>%
ggplot(aes(x = value)) +
geom_density(fill = '#e5b9ad', color = '#e5b9ad', alpha = .5) +
geom_density(data = tibble(y), aes(x = y), fill = 'lightgreen', color = 'skyblue', alpha = 0.4) +
labs(x = 'Значения', y = '',
title = 'Линейная модель и функции плотности') +
theme_minimal(base_family = 'Yeseva One') +
theme(plot.title = element_text(size = 15, hjust = 0.5),
plot.subtitle = element_text(size = 15),
axis.text = element_text(size = 13),
axis.title = element_text(size = 14),
axis.ticks = element_blank(),
panel.background = element_blank()) +
#shadow_mark(alpha = alpha/4, color = alpha("grey", .25)) +
guides(fill = 'none') +
ease_aes('linear') +
transition_time(variable)
anim_save(filename = 'dists_get_closer.gif')
model <- lm(y ~ x)
model[1]
model[1,1]
model[,1]
model$coefficients[1]
library(tidyverse)
library(gganimate)
library(sysfonts)
library(showtext)
library(hrbrthemes)
showtext.auto()
font_add_google('Yeseva One')
font_add_google('Lobster')
price <- data$sellingprice %>%
na.omit() %>%
as.numeric() %>%
data.frame() %>%
set_names('price')
odometer <- data$odometer %>%
na.omit() %>%
as.numeric() %>%
data.frame() %>%
set_names('odometer')
price <- data$sellingprice %>%
na.omit() %>%
as.numeric()
odometer <- data$odometer %>%
na.omit() %>%
as.numeric()
price(mean)
hist(price)
hist(odometer)
hist(odometer, nbins = 50)
hist(odometer,breaks = 50)
mean(odometer)
mean(price)
model <- lm(price ~ odometer)
length(price)
length(odometer)
dat <- data %>%
na.omit() %>%
select(sellingprice, odometer)
model <- lm(dat, price ~ odometer)
model <- lm(data = dat, price ~ odometer)
model <- lm(data = dat, sellingprice ~ odometer)
dat_1 <- data_frame(x = dat$odometer,
alpha_plus_x = model$coefficients[1] + dat$odometer*model$coefficients[2]) %>%
melt()
length(dat)
length(dat$sellingprice)
dat_1$variable <- c(rep(1, length(dat$sellingprice)), rep(2, length(dat$sellingprice)))
dat_1 %>%
ggplot(aes(x = value)) +
geom_density(fill = '#e5b9ad', color = '#e5b9ad', alpha = .5) +
geom_density(data = dat, aes(x = sellingprice), fill = 'lightgreen', color = 'skyblue', alpha = 0.4) +
labs(x = 'Значения', y = '',
title = 'Линейная модель и функции плотности') +
theme_minimal(base_family = 'Yeseva One') +
theme(plot.title = element_text(size = 15, hjust = 0.5),
plot.subtitle = element_text(size = 15),
axis.text = element_text(size = 13),
axis.title = element_text(size = 14),
axis.ticks = element_blank(),
panel.background = element_blank()) +
guides(fill = 'none') +
ease_aes('linear') +
transition_time(variable)
dat_1 %>%
ggplot(aes(x = value)) +
geom_density(fill = '#e5b9ad', color = '#e5b9ad', alpha = .5) +
geom_density(data = dat, aes(x = sellingprice), fill = 'lightgreen', color = 'skyblue', alpha = 0.4) +
labs(x = 'Значения', y = '',
title = 'Линейная модель и функции плотности') +
theme_minimal(base_family = 'Yeseva One') +
theme(plot.title = element_text(size = 15, hjust = 0.5),
plot.subtitle = element_text(size = 15),
axis.text = element_text(size = 13),
axis.title = element_text(size = 14),
axis.ticks = element_blank(),
panel.background = element_blank()) +
guides(fill = 'none') +
ease_aes('linear') +
transition_time(variable) +
xlim(0, 100000)
dat_1 %>%
ggplot(aes(x = value)) +
geom_density(fill = '#e5b9ad', color = '#e5b9ad', alpha = .5) +
geom_density(data = dat, aes(x = sellingprice), fill = 'lightgreen', color = 'skyblue', alpha = 0.4) +
labs(x = 'Значения', y = '',
title = 'Линейная модель и функции плотности') +
theme_minimal(base_family = 'Yeseva One') +
theme(plot.title = element_text(size = 15, hjust = 0.5),
plot.subtitle = element_text(size = 15),
axis.text = element_text(size = 13),
axis.title = element_text(size = 14),
axis.ticks = element_blank(),
panel.background = element_blank()) +
guides(fill = 'none') +
ease_aes('linear') +
transition_time(variable) +
xlim(0, 75000)
anim_save(filename = 'dists_get_closer_2.gif')
dat_1 %>%
ggplot(aes(x = value)) +
geom_density(fill = '#e5b9ad', color = '#e5b9ad', alpha = .5) +
geom_density(data = dat, aes(x = sellingprice), fill = 'lightgreen', color = 'skyblue', alpha = 0.4) +
labs(x = 'Значения', y = '',
title = 'Линейная модель и функции плотности') +
theme_minimal(base_family = 'Yeseva One') +
theme(plot.title = element_text(size = 14, hjust = 0.5),
plot.subtitle = element_text(size = 15),
axis.text = element_text(size = 13),
axis.title = element_text(size = 13),
axis.ticks = element_blank(),
panel.background = element_blank()) +
guides(fill = 'none') +
ease_aes('linear') +
transition_time(variable) +
xlim(0, 75000)
anim_save(filename = 'dists_get_closer_2.gif')
dat$odometer %>% log() %>% density %>% plot()
dat$sellingprice %>% log() %>% density %>% plot()
dat <- dat %>%
mutate(odometer = log(ofometer),
sellingprice = log(sellingprice)
)
dat <- dat %>%
mutate(odometer = log(odometer),
sellingprice = log(sellingprice)
)
dat_1 <- data_frame(x = dat$odometer,
alpha_plus_x = model$coefficients[1] + dat$odometer*model$coefficients[2]) %>%
melt()
dat_1$variable <- c(rep(1, length(dat$sellingprice)), rep(2, length(dat$sellingprice)))
dat_1 %>%
ggplot(aes(x = value)) +
geom_density(fill = '#e5b9ad', color = '#e5b9ad', alpha = .5) +
geom_density(data = dat, aes(x = sellingprice), fill = 'lightgreen', color = 'skyblue', alpha = 0.4) +
labs(x = 'Значения', y = '',
title = 'Линейная модель и функции плотности') +
theme_minimal(base_family = 'Yeseva One') +
theme(plot.title = element_text(size = 14, hjust = 0.5),
plot.subtitle = element_text(size = 15),
axis.text = element_text(size = 13),
axis.title = element_text(size = 13),
axis.ticks = element_blank(),
panel.background = element_blank()) +
guides(fill = 'none') +
ease_aes('linear') +
transition_time(variable)
model <- lm(data = dat, sellingprice ~ odometer)
dat_1 <- data_frame(x = dat$odometer,
alpha_plus_x = model$coefficients[1] + dat$odometer*model$coefficients[2]) %>%
melt()
dat_1$variable <- c(rep(1, length(dat$sellingprice)), rep(2, length(dat$sellingprice)))
dat_1 %>%
ggplot(aes(x = value)) +
geom_density(fill = '#e5b9ad', color = '#e5b9ad', alpha = .5) +
geom_density(data = dat, aes(x = sellingprice), fill = 'lightgreen', color = 'skyblue', alpha = 0.4) +
labs(x = 'Значения', y = '',
title = 'Линейная модель и функции плотности') +
theme_minimal(base_family = 'Yeseva One') +
theme(plot.title = element_text(size = 14, hjust = 0.5),
plot.subtitle = element_text(size = 15),
axis.text = element_text(size = 13),
axis.title = element_text(size = 13),
axis.ticks = element_blank(),
panel.background = element_blank()) +
guides(fill = 'none') +
ease_aes('linear') +
transition_time(variable)
anim_save(filename = 'dists_get_closer_3.gif')
data %>%
ggplot(aes(x = odometer, y = sellingprice)) +
geom_point(color = '#e5b9ad', fill = 'white', shape = 21, size = 1.5) +
geom_point(color = '#e5b9ad', fill = '#e5b9ad', shape = 21, size = 1.5, alpha = 0.4)
data %>%
ggplot(aes(x = odometer, y = sellingprice)) +
geom_point(color = '#e5b9ad', fill = 'white', shape = 21, size = 1.5) +
geom_point(color = '#e5b9ad', fill = '#e5b9ad', shape = 21, size = 1.5, alpha = 0.4) +
theme_minimal(base_family = 'Yeseva One') +
labs(x = 'Пробег', y = 'Цена продажи')
data %>%
ggplot(aes(x = odometer, y = sellingprice)) +
geom_point(color = '#e5b9ad', fill = 'white', shape = 21, size = 1.5) +
geom_point(color = '#e5b9ad', fill = '#e5b9ad', shape = 21, size = 1.5, alpha = 0.4) +
theme_minimal(base_family = 'Yeseva One') +
labs(x = 'Пробег', y = 'Цена продажи') +
xlim(0, 30000)
data %>%
ggplot(aes(x = odometer, y = sellingprice)) +
geom_point(color = '#e5b9ad', fill = 'white', shape = 21, size = 1.5) +
geom_point(color = '#e5b9ad', fill = '#e5b9ad', shape = 21, size = 1.5, alpha = 0.4) +
theme_minimal(base_family = 'Yeseva One') +
labs(x = 'Пробег', y = 'Цена продажи') +
xlim(0, 300000)
library(scales)
data %>%
ggplot(aes(x = odometer, y = sellingprice)) +
geom_point(color = '#e5b9ad', fill = 'white', shape = 21, size = 1.5) +
geom_point(color = '#e5b9ad', fill = '#e5b9ad', shape = 21, size = 1.5, alpha = 0.4) +
theme_minimal(base_family = 'Yeseva One') +
labs(x = 'Пробег', y = 'Цена продажи') +
scale_x_continuous()+
xlim(0, 300000)
data %>%
ggplot(aes(x = odometer, y = sellingprice)) +
geom_point(color = '#e5b9ad', fill = 'white', shape = 21, size = 1.5) +
geom_point(color = '#e5b9ad', fill = '#e5b9ad', shape = 21, size = 1.5, alpha = 0.4) +
theme_minimal(base_family = 'Yeseva One') +
labs(x = 'Пробег', y = 'Цена продажи') +
scale_x_continuous(labels = label_number())+
xlim(0, 300000)
data %>%
ggplot(aes(x = odometer, y = sellingprice)) +
geom_point(color = '#e5b9ad', fill = 'white', shape = 21, size = 1.5) +
geom_point(color = '#e5b9ad', fill = '#e5b9ad', shape = 21, size = 1.5, alpha = 0.4) +
theme_minimal(base_family = 'Yeseva One') +
labs(x = 'Пробег', y = 'Цена продажи') +
xlim(0, 300000) +
scale_x_continuous(labels = label_number())
data %>%
ggplot(aes(x = odometer, y = sellingprice)) +
geom_point(color = '#e5b9ad', fill = 'white', shape = 21, size = 1.5) +
geom_point(color = '#e5b9ad', fill = '#e5b9ad', shape = 21, size = 1.5, alpha = 0.4) +
theme_minimal(base_family = 'Yeseva One') +
labs(x = 'Пробег', y = 'Цена продажи') +
xlim(0, 300000, labels = label_number()) #+
data %>%
ggplot(aes(x = odometer, y = sellingprice)) +
geom_point(color = '#e5b9ad', fill = 'white', shape = 21, size = 1.5) +
geom_point(color = '#e5b9ad', fill = '#e5b9ad', shape = 21, size = 1.5, alpha = 0.4) +
theme_minimal(base_family = 'Yeseva One') +
labs(x = 'Пробег', y = 'Цена продажи') +
scale_x_continuous(limits = c(0, 300000), labels = label_number())
model <- lm(data = data, price ~ odometer)
model %>%
summary()
plot(model)
summary()
model <- lm(data = data, log(price) ~ log(odometer))
model %>%
summary()
data_frame(x = log(data$odometer),
e = model$residuals)
data_frame(x = log(na.omit(data$odometer)),
e = model$residuals)
df <- data_frame(x = log(na.omit(data$odometer)),
e = model$residuals)
df %>%
ggplot(aes(x = residuals)) +
geom_density(fill = '#e5b9ad', color = '#e5b9ad', alpha = .5) +
geom_vline(xintercept = mean(residuals), color = 'grey40', alpha = 0.5, linetype = 'dash') +
labs(x = 'Значения', y = '',
title = 'распределение остатков в модели') +
theme_minimal(base_family = 'Yeseva One') +
theme(plot.title = element_text(size = 15, hjust = 0.5),
plot.subtitle = element_text(size = 15),
axis.text = element_text(size = 13),
axis.title = element_text(size = 14),
axis.ticks = element_blank(),
panel.background = element_blank()) +
guides(fill = 'none') +
plot(model)
df %>%
ggplot(aes(x = residuals)) +
geom_density(fill = '#e5b9ad', color = '#e5b9ad', alpha = .5) +
geom_vline(xintercept = mean(residuals), color = 'grey40', alpha = 0.5, linetype = 'dash') +
labs(x = 'Значения', y = '',
title = 'распределение остатков в модели') +
theme_minimal(base_family = 'Yeseva One') +
theme(plot.title = element_text(size = 15, hjust = 0.5),
plot.subtitle = element_text(size = 15),
axis.text = element_text(size = 13),
axis.title = element_text(size = 14),
axis.ticks = element_blank(),
panel.background = element_blank()) +
guides(fill = 'none')
df %>%
ggplot(aes(x = e)) +
geom_density(fill = '#e5b9ad', color = '#e5b9ad', alpha = .5) +
geom_vline(xintercept = mean(e), color = 'grey40', alpha = 0.5, linetype = 'dash') +
labs(x = 'Значения', y = '',
title = 'распределение остатков в модели') +
theme_minimal(base_family = 'Yeseva One') +
theme(plot.title = element_text(size = 15, hjust = 0.5),
plot.subtitle = element_text(size = 15),
axis.text = element_text(size = 13),
axis.title = element_text(size = 14),
axis.ticks = element_blank(),
panel.background = element_blank()) +
guides(fill = 'none')
df <- data_frame(x = log(na.omit(data$odometer)),
e = model$residuals)
df %>%
ggplot(aes(x = e)) +
geom_density(fill = '#e5b9ad', color = '#e5b9ad', alpha = .5) +
geom_vline(xintercept = mean(e), color = 'grey40', alpha = 0.5, linetype = 'dash') +
labs(x = 'Значения', y = '',
title = 'распределение остатков в модели') +
theme_minimal(base_family = 'Yeseva One') +
theme(plot.title = element_text(size = 15, hjust = 0.5),
plot.subtitle = element_text(size = 15),
axis.text = element_text(size = 13),
axis.title = element_text(size = 14),
axis.ticks = element_blank(),
panel.background = element_blank()) +
guides(fill = 'none')
View(df)
df %>%
ggplot(aes(x = e)) +
geom_density(fill = '#e5b9ad', color = '#e5b9ad', alpha = .5) +
geom_vline(xintercept = mean(e), color = 'grey40', alpha = 0.5, linetype = 'dash') +
labs(x = 'Значения', y = '',
title = 'распределение остатков в модели') +
theme_minimal(base_family = 'Yeseva One') +
theme(plot.title = element_text(size = 15, hjust = 0.5),
plot.subtitle = element_text(size = 15),
axis.text = element_text(size = 13),
axis.title = element_text(size = 14),
axis.ticks = element_blank(),
panel.background = element_blank()) +
guides(fill = 'none')
df %>%
ggplot(aes(x = e)) +
geom_density(fill = '#e5b9ad', color = '#e5b9ad', alpha = .5) +
geom_vline(xintercept = mean(df$e), color = 'grey40', alpha = 0.5, linetype = 'dash') +
labs(x = 'Значения', y = '',
title = 'распределение остатков в модели') +
theme_minimal(base_family = 'Yeseva One') +
theme(plot.title = element_text(size = 15, hjust = 0.5),
plot.subtitle = element_text(size = 15),
axis.text = element_text(size = 13),
axis.title = element_text(size = 14),
axis.ticks = element_blank(),
panel.background = element_blank()) +
guides(fill = 'none')
df %>%
ggplot(aes(x = e)) +
geom_density(fill = '#e5b9ad', color = '#e5b9ad', alpha = .5) +
geom_vline(xintercept = mean(df$e), color = 'brown', alpha = 0.5, linetype = 'dash') +
labs(x = 'Значения', y = '',
title = 'распределение остатков в модели') +
theme_minimal(base_family = 'Yeseva One') +
theme(plot.title = element_text(size = 15, hjust = 0.5),
plot.subtitle = element_text(size = 15),
axis.text = element_text(size = 13),
axis.title = element_text(size = 14),
axis.ticks = element_blank(),
panel.background = element_blank()) +
guides(fill = 'none')
df %>%
ggplot(aes(x = e)) +
geom_density(fill = '#e5b9ad', color = '#e5b9ad', alpha = .5) +
#geom_vline(xintercept = mean(df$e), color = 'brown', alpha = 0.5, linetype = 'dash') +
labs(x = 'Значения', y = '',
title = 'распределение остатков в модели') +
theme_minimal(base_family = 'Yeseva One') +
theme(plot.title = element_text(size = 15, hjust = 0.5),
plot.subtitle = element_text(size = 15),
axis.text = element_text(size = 13),
axis.title = element_text(size = 14),
axis.ticks = element_blank(),
panel.background = element_blank()) +
guides(fill = 'none')
df %>%
ggplot(aes(x = e)) +
geom_density(fill = '#e5b9ad', color = '#e5b9ad', alpha = .5) +
geom_vline(xintercept = mean(df$e), color = 'brown', alpha = 0.5, linetype = 'dashed') +
labs(x = 'Значения', y = '',
title = 'распределение остатков в модели') +
theme_minimal(base_family = 'Yeseva One') +
theme(plot.title = element_text(size = 15, hjust = 0.5),
plot.subtitle = element_text(size = 15),
axis.text = element_text(size = 13),
axis.title = element_text(size = 14),
axis.ticks = element_blank(),
panel.background = element_blank()) +
guides(fill = 'none')
df %>%
ggplot(aes(x = e)) +
geom_density(fill = '#e5b9ad', color = '#e5b9ad', alpha = .5) +
geom_vline(xintercept = mean(df$e), color = 'brown', alpha = 0.5, linetype = 'dashed') +
labs(x = 'Значения', y = '',
title = 'распределение остатков в модели') +
theme_minimal(base_family = 'Yeseva One') +
theme(plot.title = element_text(size = 15, hjust = 0.5),
plot.subtitle = element_text(size = 15),
axis.text = element_text(size = 13),
axis.title = element_text(size = 14),
axis.ticks = element_blank(),
panel.background = element_blank()) +
scale_x_continuous(limits = c(-3,2)) +
guides(fill = 'none')
cor(df$e, df$x)
df %>%
ggplot(aes(x = e^2)) +
geom_density(fill = '#e5b9ad', color = '#e5b9ad', alpha = .5) +
geom_vline(xintercept = mean(df$e^2), color = 'brown', alpha = 0.5, linetype = 'dashed') +
labs(x = 'Значения', y = '',
title = 'распределение остатков в модели') +
theme_minimal(base_family = 'Yeseva One') +
theme(plot.title = element_text(size = 15, hjust = 0.5),
plot.subtitle = element_text(size = 15),
axis.text = element_text(size = 13),
axis.title = element_text(size = 14),
axis.ticks = element_blank(),
panel.background = element_blank()) +
scale_x_continuous(limits = c(-3,2)) +
guides(fill = 'none')
cor(df$e^2, df$x)
blogdown:::preview_site()
library(tidyverse)
library(gganimate)
library(sysfonts)
library(showtext)
library(hrbrthemes)
library(scales)
showtext.auto()
font_add_google('Yeseva One')
font_add_google('Lobster')
data <- read.csv('https://raw.githubusercontent.com/ETymch/Econometrics_2023/main/Datasets/fords_f.csv')
data %>%
ggplot(aes(x = odometer, y = sellingprice)) +
geom_point(color = '#e5b9ad', fill = 'white', shape = 21, size = 1.5) +
geom_point(color = '#e5b9ad', fill = '#e5b9ad', shape = 21, size = 1.5, alpha = 0.2) +
theme_minimal(base_family = 'Yeseva One') +
labs(x = 'Пробег', y = 'Цена продажи') +
scale_x_continuous(limits = c(0, 300000), labels = label_number())
price <- data$sellingprice %>%
na.omit() %>%
as.numeric() %>%
data.frame() %>%
set_names('price')
price %>%
ggplot() +
geom_histogram(mapping = aes(x = price),
col = 'skyblue',
fill = 'green', alpha = 0.3) +
theme_minimal(base_family = 'Lobster', base_size = 19) +
labs(x = 'Цены', y = 'Число наблюдений', title = 'Распределение цен в выборке')
odometer <- data$odometer %>%
na.omit() %>%
as.numeric() %>%
data.frame() %>%
set_names('odometer')
odometer %>%
ggplot() +
geom_histogram(mapping = aes(x = odometer),
col = 'red',
fill = 'orange', alpha = 0.3) +
xlim(0,250000) +
theme_minimal(base_family = 'Lobster', base_size = 19) +
labs(x = 'Пробег', y = 'Число наблюдений', title = 'Распределение пробега в выборке')
wage = c(37.93, 40.87, 14.18, 16.83, 33.17, 29.81, 54.62, 43.08, 14.42,
14.90, 21.63, 11.09, 10.00, 31.73, 11.06, 18.75, 27.35, 24.04,
36.06, 23.08)
education = c(18, 18, 13, 16, 16, 18, 16, 18, 12, 16, 18, 16, 13, 14, 12, 16,
14, 16, 18, 16)
lwage = log(wage)
X <- matrix(c(education, rep(1, 20)), ncol = 2, nrow = 20) # 20x2 матрица
p1 <- MASS::ginv(t(X) %*% X) # (X'X)^(-1)
p2 <- t(X) %*% lwage # X'Y
betas <- p1 %*% p2
betas
