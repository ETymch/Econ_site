geom_text(x = -1.6,y = 0.03,label = round(prob_under_minus1, 4),size = 4, family = 'Josefin Sans') +
geom_text(x = 1.6,y = 0.03,label = round(prob_under_minus1, 4),size = 4) +
geom_text(x=0,y=0.1,label=round(1-(prob_under_minus1*2),4),size=5) +
xlim(-4, 4) +
theme_minimal(base_family = 'Josefin Sans')
?geom_text
ggplot(data, aes(x = x, y = y)) +   # Create the plot
geom_line() +
geom_ribbon(data = subset(data,x < -1),
aes(ymax=y, ymin=0),
fill="red",
alpha=0.4) +
geom_ribbon(data = subset(data, x > 1),
aes(ymax = y, ymin = 0),
fill="red",
alpha=0.4) +
geom_ribbon(data = subset(data, x > -1 & x < 1),
aes(ymax = y, ymin = 0),
fill = "skyblue",
alpha = 0.4) +
geom_text(family = 'Josefin Sans', x = -1.6,y = 0.03,label = round(prob_under_minus1, 4),size = 4) +
geom_text(x = 1.6,y = 0.03,label = round(prob_under_minus1, 4),size = 4) +
geom_text(x=0,y=0.1,label=round(1-(prob_under_minus1*2),4),size=5) +
xlim(-4, 4) +
theme_minimal(base_family = 'Josefin Sans')
ggplot(data, aes(x = x, y = y)) +   # Create the plot
geom_line() +
geom_ribbon(data = subset(data,x < -1),
aes(ymax=y, ymin=0),
fill="red",
alpha=0.4) +
geom_ribbon(data = subset(data, x > 1),
aes(ymax = y, ymin = 0),
fill="red",
alpha=0.4) +
geom_ribbon(data = subset(data, x > -1 & x < 1),
aes(ymax = y, ymin = 0),
fill = "skyblue",
alpha = 0.4) +
geom_text(x = -1.6,y = 0.03,label = round(prob_under_minus1, 2),size = 4) +
geom_text(x = 1.6,y = 0.03,label = round(prob_under_minus1, 2),size = 4) +
geom_text(x=0,y=0.1,label=round(1-(prob_under_minus1*2),2),size=5) +
xlim(-4, 4) +
theme_minimal(base_family = 'Josefin Sans')
ggplot(data, aes(x = x, y = y)) +   # Create the plot
geom_line() +
geom_ribbon(data = subset(data,x < -1),
aes(ymax=y, ymin=0),
fill="orange",
alpha=0.3) +
geom_ribbon(data = subset(data, x > 1),
aes(ymax = y, ymin = 0),
fill="orange",
alpha=0.3) +
geom_ribbon(data = subset(data, x > -1 & x < 1),
aes(ymax = y, ymin = 0),
fill = "lightgreen",
alpha = 0.3) +
geom_text(x = -1.6,y = 0.03,label = round(prob_under_minus1, 2),size = 4) +
geom_text(x = 1.6,y = 0.03,label = round(prob_under_minus1, 2),size = 4) +
geom_text(x=0,y=0.1,label=round(1-(prob_under_minus1*2),2),size=5) +
xlim(-4, 4) +
theme_minimal(base_family = 'Josefin Sans')
ggplot(data, aes(x = x, y = y)) +   # Create the plot
geom_line(alpha = 0.2) +
geom_ribbon(data = subset(data,x < -1),
aes(ymax=y, ymin=0),
fill="orange",
alpha=0.3) +
geom_ribbon(data = subset(data, x > 1),
aes(ymax = y, ymin = 0),
fill="orange",
alpha=0.3) +
geom_ribbon(data = subset(data, x > -1 & x < 1),
aes(ymax = y, ymin = 0),
fill = "lightgreen",
alpha = 0.3) +
geom_text(x = -1.6,y = 0.03,label = round(prob_under_minus1, 2),size = 4) +
geom_text(x = 1.6,y = 0.03,label = round(prob_under_minus1, 2),size = 4) +
geom_text(x=0,y=0.1,label=round(1-(prob_under_minus1*2),2),size=5) +
xlim(-4, 4) +
theme_minimal(base_family = 'Josefin Sans')
ggplot(data, aes(x = x, y = y)) +   # Create the plot
geom_line(alpha = 0.2) +
geom_ribbon(data = subset(data,x < -1),
aes(ymax=y, ymin=0),
fill="orange",
alpha=0.3) +
geom_ribbon(data = subset(data, x > 1),
aes(ymax = y, ymin = 0),
fill="orange",
alpha=0.3) +
geom_ribbon(data = subset(data, x > -1 & x < 1),
aes(ymax = y, ymin = 0),
fill = "lightgreen",
alpha = 0.3) +
geom_text(x = -1.6,y = 0.03,label = round(prob_under_minus1, 2),size = 4, alpha = 0.1) +
geom_text(x = 1.6,y = 0.03,label = round(prob_under_minus1, 2),size = 4) +
geom_text(x=0,y=0.1,label=round(1-(prob_under_minus1*2),2),size=5) +
xlim(-4, 4) +
theme_minimal(base_family = 'Josefin Sans')
ggplot(data, aes(x = x, y = y)) +   # Create the plot
geom_line(alpha = 0.2) +
geom_ribbon(data = subset(data,x < -1),
aes(ymax=y, ymin=0),
fill="orange",
alpha=0.3) +
geom_ribbon(data = subset(data, x > 1),
aes(ymax = y, ymin = 0),
fill="orange",
alpha=0.3) +
geom_ribbon(data = subset(data, x > -1 & x < 1),
aes(ymax = y, ymin = 0),
fill = "lightgreen",
alpha = 0.3) +
geom_text(x = -1.6,y = 0.03,label = '0.68' ,size = 4) + #round(prob_under_minus1, 2)
geom_text(x = 1.6,y = 0.03,label = round(prob_under_minus1, 2),size = 4) +
geom_text(x=0,y=0.1,label=round(1-(prob_under_minus1*2),2),size=5) +
xlim(-4, 4) +
theme_minimal(base_family = 'Josefin Sans')
ggplot(data, aes(x = x, y = y)) +   # Create the plot
geom_line(alpha = 0.2) +
geom_ribbon(data = subset(data,x < -1),
aes(ymax=y, ymin=0),
fill="orange",
alpha=0.3) +
geom_ribbon(data = subset(data, x > 1),
aes(ymax = y, ymin = 0),
fill="orange",
alpha=0.3) +
geom_ribbon(data = subset(data, x > -1 & x < 1),
aes(ymax = y, ymin = 0),
fill = "lightgreen",
alpha = 0.3) +
geom_text(x = -1.6,y = 0.03,label = 0.68 ,size = 4) + #round(prob_under_minus1, 2)
geom_text(x = 1.6,y = 0.03,label = round(prob_under_minus1, 2),size = 4) +
geom_text(x=0,y=0.1,label=round(1-(prob_under_minus1*2),2),size=5) +
xlim(-4, 4) +
theme_minimal(base_family = 'Josefin Sans')
ggplot(data, aes(x = x, y = y)) +   # Create the plot
geom_line(alpha = 0.2) +
geom_ribbon(data = subset(data,x < -1),
aes(ymax=y, ymin=0),
fill="orange",
alpha=0.3) +
geom_ribbon(data = subset(data, x > 1),
aes(ymax = y, ymin = 0),
fill="orange",
alpha=0.3) +
geom_ribbon(data = subset(data, x > -1 & x < 1),
aes(ymax = y, ymin = 0),
fill = "lightgreen",
alpha = 0.3) +
geom_text(x = -1.6,y = 0.03,label = '0.68' ,size = 4) + #round(prob_under_minus1, 2)
geom_text(x = 1.6,y = 0.03,label = round(prob_under_minus1, 2),size = 4) +
geom_text(x=0,y=0.1,label=round(1-(prob_under_minus1*2),2),size=5) +
xlim(-4, 4) +
theme_minimal(base_family = 'Josefin Sans')
ggplot(data, aes(x = x, y = y)) +   # Create the plot
geom_line(alpha = 0.2) +
geom_ribbon(data = subset(data,x < -1),
aes(ymax=y, ymin=0),
fill="orange",
alpha=0.3) +
geom_ribbon(data = subset(data, x > 1),
aes(ymax = y, ymin = 0),
fill="orange",
alpha=0.3) +
geom_ribbon(data = subset(data, x > -1 & x < 1),
aes(ymax = y, ymin = 0),
fill = "lightgreen",
alpha = 0.3) +
annotate(x = -1.6,y = 0.03,label = round(prob_under_minus1, 2) ,size = 4) +
geom_text(x = 1.6,y = 0.03,label = round(prob_under_minus1, 2),size = 4) +
geom_text(x=0,y=0.1,label=round(1-(prob_under_minus1*2),2),size=5) +
xlim(-4, 4) +
theme_minimal(base_family = 'Josefin Sans')
ggplot(data, aes(x = x, y = y)) +   # Create the plot
geom_line(alpha = 0.2) +
geom_ribbon(data = subset(data,x < -1),
aes(ymax=y, ymin=0),
fill="orange",
alpha=0.3) +
geom_ribbon(data = subset(data, x > 1),
aes(ymax = y, ymin = 0),
fill="orange",
alpha=0.3) +
geom_ribbon(data = subset(data, x > -1 & x < 1),
aes(ymax = y, ymin = 0),
fill = "lightgreen",
alpha = 0.3) +
annotate('text', x = -1.6,y = 0.03,label = round(prob_under_minus1, 2) ,size = 4) +
geom_text(x = 1.6,y = 0.03,label = round(prob_under_minus1, 2),size = 4) +
geom_text(x=0,y=0.1,label=round(1-(prob_under_minus1*2),2),size=5) +
xlim(-4, 4) +
theme_minimal(base_family = 'Josefin Sans')
ggplot(data, aes(x = x, y = y)) +   # Create the plot
geom_line(alpha = 0.2) +
geom_ribbon(data = subset(data,x < -1),
aes(ymax=y, ymin=0),
fill="orange",
alpha=0.3) +
geom_ribbon(data = subset(data, x > 1),
aes(ymax = y, ymin = 0),
fill="orange",
alpha=0.3) +
geom_ribbon(data = subset(data, x > -1 & x < 1),
aes(ymax = y, ymin = 0),
fill = "lightgreen",
alpha = 0.3) +
annotate('text', x = -1.6,y = 0.03,label = round(prob_under_minus1, 2) ,size = 4) +
annotate('text', x = 1.6,y = 0.03,label = round(prob_under_minus1, 2),size = 4) +
geom_text('text', x = 0,y = 0.1,label = round(1-(prob_under_minus1*2),2),size=5) +
xlim(-4, 4) +
theme_minimal(base_family = 'Josefin Sans')
ggplot(data, aes(x = x, y = y)) +   # Create the plot
geom_line(alpha = 0.2) +
geom_ribbon(data = subset(data,x < -1),
aes(ymax=y, ymin=0),
fill="orange",
alpha=0.3) +
geom_ribbon(data = subset(data, x > 1),
aes(ymax = y, ymin = 0),
fill="orange",
alpha=0.3) +
geom_ribbon(data = subset(data, x > -1 & x < 1),
aes(ymax = y, ymin = 0),
fill = "lightgreen",
alpha = 0.3) +
annotate('text', x = -1.6,y = 0.03, label = round(prob_under_minus1, 2) ,size = 4) +
annotate('text', x = 1.6,y = 0.03, label = round(prob_under_minus1, 2),size = 4) +
annotate('text', x = 0,y = 0.1, label = round(1-(prob_under_minus1*2),2),size=5) +
xlim(-4, 4) +
theme_minimal(base_family = 'Josefin Sans')
ggplot(data, aes(x = x, y = y)) +   # Create the plot
geom_line(alpha = 0.2) +
geom_ribbon(data = subset(data,x < -1),
aes(ymax=y, ymin=0),
fill="orange",
alpha=0.3) +
geom_ribbon(data = subset(data, x > 1),
aes(ymax = y, ymin = 0),
fill="orange",
alpha=0.3) +
geom_ribbon(data = subset(data, x > -1 & x < 1),
aes(ymax = y, ymin = 0),
fill = "lightgreen",
alpha = 0.3) +
annotate('text', x = -1.6,y = 0.03, label = round(prob_under_minus1, 2) ,size = 4) +
annotate('text', x = 1.6,y = 0.03, label = round(prob_under_minus1, 2),size = 4) +
annotate('text', x = 0,y = 0.1, label = round(1-(prob_under_minus1*2),2),size = 5) +
xlim(-4, 4) +
theme_minimal(base_family = 'Josefin Sans')
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site()
library(tidyverse)
dist_kisses <- function(n,p,k){ # Создадим функцию
means <- c() # means - пустой вектор
for (i in 1:k){ # Мы k раз
means[i] <- purrr::rbernoulli(n,p) %>% mean() # добавляем в вектор means долю успехов
} # в n испытаниях по схеме Бернулли.
return(means) # и возвращаем вектор means с n наблюдениями
}
n = 100
p = 0.7
k = 2000
dist_kisses(n,p,k) %>% hist(main = 'Histogram of Kisses')
n = 500
p = 0.7
k = 1000
dist_kisses(n,p,k) %>% hist(main = 'Histogram of Kisses')
n = 50
p = 0.7
k = 1000
dist_kisses(n,p,k) %>% hist(main = 'Histogram of Kisses')
n = 70
p = 0.7
dist_kisses <- function(n,p,k){ # Создадим функцию
means <- c() # means - пустой вектор
for (i in 1:k){ # Мы k раз
means[i] <- rbernoulli(n,p) %>% mean() # добавляем в вектор means долю успехов
} # в n испытаниях по схеме Бернулли.
return(means) # и возвращаем вектор means с n наблюдениями
}
n = 70
p = 0.7
k = 500
dist_kisses(n,p,k) %>% hist(main = 'Histogram of Kisses')
dist_kisses(n,p,k) %>% mean()
error_mean <- function(n,p,k){
error <- c() # error - пустой вектор
for (j in 1:k){ # для j от 1 до k
error[j] <- p - mean(dist_kisses(n,p,j)) # error = отклонению среднего в k экспериментах
} # от теоретического среднего
return(error)
}
convergence_proof <- error_mean(50, 0.7, 1000) # проведём эксперимент с поцелуями 50 девушек/парней 1000 раз.
n = 10
kisses <- rbernoulli(n, p = 0.7)
dist_kisses <- function(n,p,k){
means <- c()
for (i in 1:k){
means[i] <- rbernoulli(n,p) %>% mean()
}
return(means)
}
n = 100
p = 0.7
k = 2000
dist_kisses(n,p,k) %>% hist(main = 'Histogram of Kisses')
gc()
library(tidyverse)
n = 10
kisses <- rbernoulli(n, p = 0.7)
dist_kisses <- function(n,p,k){
means <- c()
for (i in 1:k){
means[i] <- rbernoulli(n,p) %>% mean()
}
return(means)
}
n = 100
p = 0.7
k = 2000
dist_kisses(n,p,k) %>% hist(main = 'Histogram of Kisses')
library(tidyverse)
n = 10
kisses <- rbernoulli(n, p = 0.7)
dist_kisses <- function(n,p,k){
means <- c()
for (i in 1:k){
means[i] <- rbernoulli(n,p) %>% mean()
}
return(means)
}
n = 100
p = 0.7
k = 2000
dist_kisses(n,p,k) %>% hist(main = 'Histogram of Kisses')
gc()
dist_kisses(n,p,k) %>% mean()
p - mean(dist_kisses(n,p,k))
error_mean <- function(n,p,k){
error <- c()
for (j in 1:n){
error[j] <- p - mean(dist_kisses(j,p,k))
}
return(error)
}
clt_proof <- error_mean(5000, 0.7, 30)
error_mean <- function(n,p,k){
error <- c()
for (j in 1:n){
error[j] <- p - mean(dist_kisses(n,p,j))
}
return(error)
}
clt_proof <- error_mean(40, 0.7, 500)
clt_proof <- error_mean(10, 0.7, 50)
clt_proof <- error_mean(10, 0.7, 500)
clt_proof <- error_mean(40, 0.7, 500)
library(tidyverse)
purrr::rbernoulli(5, p = 0.7)
dist_kisses <- function(n,p,k){ # Создадим функцию
means <- c() # means - пустой вектор
for (i in 1:k){ # Мы k раз
means[i] <- purrr::rbernoulli(n,p) %>% mean() # добавляем в вектор means долю успехов
} # в n испытаниях по схеме Бернулли.
return(means) # и возвращаем вектор means с n наблюдениями
}
library(tidyverse)
purrr::rbernoulli(5, p = 0.7)
dist_kisses <- function(n,p,k){ # Создадим функцию
means <- c() # means - пустой вектор
for (i in 1:k){ # Мы k раз
means[i] <- purrr::rbernoulli(n,p) %>% mean() # добавляем в вектор means долю успехов
} # в n испытаниях по схеме Бернулли.
return(means) # и возвращаем вектор means с n наблюдениями
}
n = 100
p = 0.7
k = 500
dist_kisses(n,p,k) %>% hist(main = 'Histogram of Kisses')
dist_kisses(n,p,k) %>% mean()
error_mean <- function(n,p,k){
error <- c() # error - пустой вектор
for (j in 1:k){ # для j от 1 до k
error[j] <- p - mean(dist_kisses(n,p,j)) # error = отклонению среднего в k экспериментах
} # от теоретического среднего
return(error)
}
error_mean <- function(n,p,k){
error <- c()
for (j in 1:n){
error[j] <- p - mean(dist_kisses(n,p,j))
}
return(error)
}
clt_proof <- error_mean(40, 0.7, 500)
error_mean <- function(n,p,k){
error <- c()
for (j in 1:k){
error[j] <- p - mean(dist_kisses(n,p,j))
}
return(error)
}
clt_proof <- error_mean(40, 0.7, 500)
clt_proof <- error_mean(40, 0.7, 500)
error_mean <- function(n,p,k){
error <- c()
for (j in 1:n){
error[j] <- p - mean(dist_kisses(j,p,k))
}
return(error)
}
clt_proof <- error_mean(40, 0.7, 500)
rbinom(10, 1, 0.7)
error_mean <- function(n,p,k){
error <- c()
for (j in 1:n){
error[j] <- p - mean(rbinom(k, p, j))
}
return(error)
}
clt_proof <- error_mean(40, 0.7, 500)
error_mean <- function(n,p,k){
error <- c()
for (j in 1:n){
error[j] <- p - mean(rbinom(n = k, p, j))
}
return(error)
}
clt_proof <- error_mean(40, 0.7, 500)
error_mean <- function(n,p,k){
error <- c()
for (j in 1:n){
error[j] <- p - mean(rbinom(n = k, prob = p, size = j))
}
return(error)
}
clt_proof <- error_mean(40, 0.7, 500)
clt_proof <- error_mean(40, 0.7, 1000)
rbinom(n = 10, prob = 0.7, size = 50)
rbinom(n = 1000, prob = p, size = 100)
rbinom(n = 1000, prob = p, size = 100) / 100
error_mean <- function(n,p,k){
error <- c()
for (j in 1:n){
error[j] <- p - mean(rbinom(n = k, prob = p, size = j) / j)
}
return(error)
}
clt_proof <- error_mean(40, 0.7, 1000)
mean(clt_proof[1000:2000]) <= mean(clt_proof[2000:3000])
mean(clt_proof[10:20]) <= mean(clt_proof[90:100])
n = 100
error_mean <- function(n,p,k){
error <- c()
for (j in 1:n){
error[j] <- p - mean(rbinom(n = k, prob = p, size = j) / j)
}
return(error)
}
clt_proof <- error_mean(40, 0.7, 1000)
mean(clt_proof[10:20]) <= mean(clt_proof[90:100])
clt_proof[10:20]
clt_proof[90:100]
clt_proof <- error_mean(100, 0.7, 1000)
mean(clt_proof[10:20]) <= mean(clt_proof[90:100])
rbinom(n = 1000, prob = p, size = 10) / 10
clt_proof <- error_mean(100, 0.7, 1000)
mean(clt_proof[10:20]) <= mean(clt_proof[90:100])
clt_proof <- error_mean(1000, 0.7, 1000)
mean(clt_proof[100:200]) <= mean(clt_proof[900:1000])
clt_proof <- error_mean(1000, 0.7, 1000)
mean(clt_proof[100:200]) <= mean(clt_proof[900:1000])
clt_proof <- error_mean(1000, 0.7, 1000)
mean(clt_proof[100:200]) <= mean(clt_proof[900:1000])
clt_proof <- error_mean(1000, 0.7, 1000)
mean(clt_proof[100:200]) <= mean(clt_proof[900:1000])
clt_proof <- error_mean(1000, 0.7, 1000)
mean(clt_proof[100:200]) <= mean(clt_proof[900:1000])
clt_proof <- error_mean(1000, 0.7, 1000)
mean(clt_proof[100:200]) <= mean(clt_proof[900:1000])
n = 100
p = 0.7
k = 1000
error_mean <- function(n,p,k){
error <- c()
for (j in 1:n){
error[j] <- p - mean(dist_kisses(j,p,k))
}
return(error)
}
error_mean(n,p,k)
dist_kisses <- function(n,p,k){
means <- c()
for (i in 1:k){
means[i] <- rbinom(n = n, prob = p, size = 1) %>% mean()
}
return(means)
}
n = 100
p = 0.7
k = 1000
dist_kisses(n,p,k) %>% hist(main = 'Histogram of Kisses')
dist_kisses(n,p,k) %>% mean()
blogdown:::preview_site()
blogdown::stop_server()
blogdown::serve_site()
